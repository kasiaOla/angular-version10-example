{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/announcements/add-announcement/add-announcement.component.ts","./src/app/modules/announcements/add-announcement/add-announcement.component.html","./src/app/modules/announcements/add-category-announcement/add-category-announcement.component.ts","./src/app/modules/announcements/add-category-announcement/add-category-announcement.component.html","./src/app/modules/announcements/announcement-routing.module.ts","./src/app/modules/announcements/announcement.module.ts","./src/app/modules/announcements/announcement.ts","./src/app/modules/announcements/announcement/announcement.component.ts","./src/app/modules/announcements/announcement/announcement.component.html","./src/app/modules/core/authentication/auth-guard/auth-guard.service.ts","./src/app/modules/core/authentication/auth-interceptor/auth-interceptor.service.ts","./src/app/modules/core/authentication/auth/auth.service.ts","./src/app/modules/core/authentication/authentication.module.ts","./src/app/modules/core/core.module.ts","./src/app/modules/core/footer/footer.component.ts","./src/app/modules/core/footer/footer.component.html","./src/app/modules/core/navbar/navbar.component.ts","./src/app/modules/core/navbar/navbar.component.html","./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/users/contact/contact.component.ts","./src/app/modules/users/contact/contact.component.html","./src/app/modules/users/user-login/user-login.component.ts","./src/app/modules/users/user-login/user-login.component.html","./src/app/modules/users/user-profile/user-profile.component.ts","./src/app/modules/users/user-profile/user-profile.component.html","./src/app/modules/users/user-registration/user-registration.component.ts","./src/app/modules/users/user-registration/user-registration.component.html","./src/app/modules/users/user.ts","./src/app/modules/users/user/user.component.ts","./src/app/modules/users/user/user.component.html","./src/app/modules/users/users-routing.module.ts","./src/app/modules/users/users.module.ts","./src/app/shared/shared-ag-grid-header/ag-grid-header.component.ts","./src/app/shared/shared-ag-grid-header/ag-grid-header.component.html","./src/app/shared/shared-services/announcement/announcement.service.ts","./src/app/shared/shared-services/logger/logger.service.ts","./src/app/shared/shared-services/user/user-shared.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;ACZA,sHAAyC;AACzC,8HAAuD;AACvD,8HAA8D;;;AAG9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,8BAAa;KACzB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,iDAAO,6EAA8B,GAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KACpF;IACD;QACE,IAAI,EAAE,cAAc;QACpB,YAAY,EAAE,GAAG,EAAE,CAAC,iDAAO,2GAA6C,GAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC;KAC1G;CACF,CAAC;AAEF,MAQa,gBAAgB;;AAR7B,4CAQiC;oDAApB,gBAAgB;+GAAhB,gBAAgB,kBAPlB,CAAC,qBAAY,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrC,+CAA+C;gBAC/C,OAAO,EAAE,IAAI;gBACb,iBAAiB,EAAE,SAAS;aAC/B,CAAC,CAAC,EACS,qBAAY;wFAEX,gBAAgB,0CAFjB,qBAAY;kDAEX,gBAAgB;cAR5B,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrC,+CAA+C;wBAC/C,OAAO,EAAE,IAAI;wBACb,iBAAiB,EAAE,SAAS;qBAC/B,CAAC,CAAC;gBACD,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;AChCD,sHAA0C;;;;;;AAK1C,MAKa,YAAY;IACvB,YAAsB,IAAiB,EAAW,MAAc;QAA1C,SAAI,GAAJ,IAAI,CAAa;QAAW,WAAM,GAAN,MAAM,CAAQ;QAC9D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACrC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC;;AAVH,oCAWC;wEANY,YAAY;iDAAZ,YAAY;QCVzB,6BAAyB;QACzB,6BAAyB;;kDDSZ,YAAY;cALxB,gBAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;;;;AETD,qKAA+E;AAC/E,sKAA0D;AAC1D,sHAAyC;AACzC,gHAAwD;AACxD,iGAA+C;AAC/C,8HAA8D;AAC9D,0HAAkE;AAClE,+HAAwD;AACxD,qHAAwD;AACxD,8HAA+C;AAC/C,gKAA+E;AAC/E,iIAAwE;AACxE,gJAA+C;AAC/C,8LAAiG;AACjG,4LAAgG;AAChG,iLAA2F;;;;AAG3F,MAsCa,SAAS;;AAtCtB,8BAsC0B;6CAAb,SAAS,cAFR,4BAAY;iGAEb,SAAS,mBAZT;QACT,0CAAmB;QACnB;YACE,OAAO,EAAE,8BAAa;YACtB,QAAQ,EAAE,uCAAoB;SAC/B;KACF,YA1BQ;YACP,qBAAY;YACZ,gCAAa,CAAC,oBAAoB,CAAC;gBACjC,KAAK,EAAE,WAAW;aACnB,CAAC;YACF,gCAAa;YACb,8BAAY,CAAC,cAAc,CAAC,EAAE,CAAC;YAC/B,qCAAgB;YAChB,2BAAmB;YACnB,mBAAW;YACX,uBAAgB;YAChB,oCAAuB;YACvB,wBAAU;YACV,4CAAoB;SACrB;wFAkBU,SAAS,mBApClB,4BAAY;QACZ,8BAAa;QACb,gDAAqB,aAGrB,qBAAY,oBAIZ,gCAAa,mBAEb,qCAAgB;QAChB,2BAAmB;QACnB,mBAAW;QACX,uBAAgB;QAChB,oCAAuB;QACvB,wBAAU;QACV,4CAAoB,aAGpB,4BAAY;QACZ,8BAAa;QACb,gDAAqB;kDAcZ,SAAS;cAtCrB,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4BAAY;oBACZ,8BAAa;oBACb,gDAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,qBAAY;oBACZ,gCAAa,CAAC,oBAAoB,CAAC;wBACjC,KAAK,EAAE,WAAW;qBACnB,CAAC;oBACF,gCAAa;oBACb,8BAAY,CAAC,cAAc,CAAC,EAAE,CAAC;oBAC/B,qCAAgB;oBAChB,2BAAmB;oBACnB,mBAAW;oBACX,uBAAgB;oBAChB,oCAAuB;oBACvB,wBAAU;oBACV,4CAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,4BAAY;oBACZ,8BAAa;oBACb,gDAAqB;iBACtB;gBACD,SAAS,EAAE;oBACT,0CAAmB;oBACnB;wBACE,OAAO,EAAE,8BAAa;wBACtB,QAAQ,EAAE,uCAAoB;qBAC/B;iBACF;gBACD,eAAe,EAAE;oBACf,gDAAqB;iBACtB;gBACD,SAAS,EAAE,CAAC,4BAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;ACvDD,sHAAkD;AAClD,0HAAiF;AAEjF,qHAA0F;;;;;;AAI1F,MAKa,wBAAwB;IAWnC,YAAoB,EAAe,EACzB,MAAqB,EACrB,mBAAwC,EACxC,KAAqB;QAHX,OAAE,GAAF,EAAE,CAAa;QACzB,WAAM,GAAN,MAAM,CAAe;QACrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,UAAK,GAAL,KAAK,CAAgB;QAT/B,4BAAuB,GAAG,sCAAuB,CAAC;QAElD,qBAAgB,GAAG,+BAAgB,CAAC;IAQpC,CAAC;IAED,QAAQ;QACN,uHAAuH;QACvH,+DAA+D;QAC/D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAEpC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE;YAC7B,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE;YAC7B,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE;YAC/B,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;YACjC,aAAa,EAAE,IAAI,CAAC,eAAe,EAAE;YACrC,OAAO,EAAE,IAAI,iBAAS,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;gBAC9B,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;gBACnC,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE;gBAChC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE;aAC7B,CAAC;YACF,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE;YAClC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;YACnC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE;SAC9B,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,CAAC,uBAAuB,GAAG,sCAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,gBAAgB,GAAG,+BAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,mBAAW,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5D,OAAO,MAAM,CAAC;IAChB,CAAC;IAGD,eAAe;QACb,MAAM,eAAe,GAAiB;YACpC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK;YACxC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK;YACxC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO;YAC5C,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS;YAChD,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,aAAa;YACxD,OAAO,EAAE;gBACP,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM;gBAClD,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW;gBAC5D,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;gBACtD,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;aAC/C;YACD,uBAAuB,EAAE,sCAAuB,CAAC,IAAI,CAAC,WAAW,CAAC;YAClE,gBAAgB,EAAE,+BAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;YAChD,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU;YAClD,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW;YACpD,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK;SACzC,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC;aACtF,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,MAAM,EACN,QAAQ,IAAI,CAAC,OAAO,EAAE;gBACpB,KAAK,KAAK,CAAC,CAAC;oBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;oBAChD,MAAM;iBACP;gBACD,KAAK,IAAI,CAAC,CAAC;oBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4CAA4C,GAAG,IAAI,CAAC,OAAO,CAAE,CAAC;oBAC/E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;oBAC9B,MAAM;iBACP;gBACD,OAAO,CAAC,CAAC;oBACP,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;oBAC9B,MAAM;iBACP;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;AAlGH,4DAmGC;gGA9FY,wBAAwB;6DAAxB,wBAAwB;QCZrC,8BACI;QAAA,8BACI;QAAA,8BACI;QAAA,0BAAI;QAAA,YAAgE;QAAA,iBAAK;QAC7E,iBAAM;QACN,8BACI;QAAA,8BACI;QAAA,8BACI;QAAA,+BACI;QADiC,yGAAY,qBAAiB,IAAC;QAC/D,8BACI;QAAA,+BACI;QAAA,iCAAmB;QAAA,4BAAM;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC7C,4BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAmB;QAAA,sBAAM;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC7C,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAqB;QAAA,8BAAc;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QACvD,6BACJ;QAAA,iBAAM;QACV,iBAAM;QACN,+BACI;QAAA,gCACI;QAAA,kCAAuB;QAAA,wCAAkB;QAAA,iBAAQ;QACjD,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAA2B;QAAA,6BAAY;QAAA,iBAAQ;QAC/C,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAmB;QAAA,uBAAM;QAAA,iBAAQ;QACjC,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAwB;QAAA,2BAAU;QAAA,iBAAQ;QAC1C,6BACJ;QAAA,iBAAM;QACV,iBAAM;QAEN,qCAEI;QAAA,8BAAO;QAAA,uBAAM;QAAA,iBAAQ;QACrB,gCACI;QAAA,gCACI;QAAA,kCAAkB;QAAA,uBAAM;QAAA,iBAAQ;QAChC,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAoB;QAAA,sBAAK;QAAA,iBAAQ;QACjC,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAyB;QAAA,wBAAO;QAAA,iBAAQ;QACxC,6BACJ;QAAA,iBAAM;QACN,gCACI;QAAA,kCAAsB;QAAA,6BAAY;QAAA,iBAAQ;QAC1C,6BACJ;QAAA,iBAAM;QACV,iBAAM;QACV,iBAAW;QACX,+BACI;QAAA,gCACI;QAAA,kCAAyB;QAAA,qBAAI;QAAA,iBAAQ;QACrC,gCAAoG;QACxG,iBAAM;QACN,gCACI;QAAA,kCAA8B;QAAA,sBAAK;QAAA,iBAAQ;QAC3C,6BACJ;QAAA,iBAAM;QACV,iBAAM;QACN,+BACI;QAAA,gCACI;QAAA,mCAA8C;QAAA,wBAAO;QAAA,iBAAS;QAC9D,mCAA8C;QAAA,4BAAW;QAAA,iBAAS;QACtE,iBAAM;QACV,iBAAM;QACV,iBAAO;QACX,iBAAM;QACV,iBAAM;QACV,iBAAM;QACV,iBAAM;QACV,iBAAM;;QAlFU,eAAgE;QAAhE,mGAAgE;QAKtD,eAA8B;QAA9B,gDAA8B;QA+DgB,gBAAwC;QAAxC,yDAAwC;;kDD3DnG,wBAAwB;cALpC,gBAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;;;;AEXD,sHAAkD;AAClD,qHAA4E;;;;;;ICOtE,4BAGE;IAAA,YAAwC;IAAA,iBAAI;;;;;IAHxB,0GAA+F;IAGnH,eAAwC;IAAxC,8EAAwC;;;IAJpC,+BACN;IAAA,gGAGE;;IACJ,iBAAO;;;IAFH,eAA8E;IAA9E,uEAA8E;;;IAL9E,8BACI;IAAA,YACA;IAAA,+FACN;IAKE,iBAAM;;;;IAPF,eACA;IADA,wCACA;IAAsB,eAA0C;IAA1C,gEAA0C;;;IAHxE,2BACI;IAAA,uFACI;IAQR,iBAAM;;;IATsC,eAA8D;IAA9D,uCAA8D;;ADD9G,MAKa,gCAAgC;IAQ3C;QALA,4BAAuB,GAAG,sCAAuB,CAAC;QAClD,kCAA6B,GAAI,MAAM,CAAC,MAAM,CAAC,sCAAuB,CAAC,CAAC,MAAM,CAAC;QAE/E,qBAAgB,GAAG,+BAAgB,CAAC;IAEpB,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,sCAAuB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IACnD,CAAC;;AApBH,4EAqBC;gHAhBY,gCAAgC;qEAAhC,gCAAgC;QCT7C,8BACI;QAAA,2BACI;QAAA,gCAAkB;QAAA,iCAAiB;QAAA,2BAAK;QAAA,iBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC3D,iBAAM;QACN,iFACI;QAUR,iBAAM;;QAXG,eAA0C;QAA1C,6DAA0C;;kDDKtC,gCAAgC;cAL5C,gBAAS;eAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;aAC1D;;;;;;;;;;;;;;;;;AERD,sHAAyC;AACzC,8HAAuD;AACvD,gMAAyF;AACzF,6OAAmH;AACnH,4KAA8E;;;AAE9E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8CAAqB;QAChC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE;gBACpC,SAAS,EAAE,sEAAgC;aAC5C;YACD;gBACE,IAAI,EAAE,qCAAqC;gBAC3C,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE;gBACnC,SAAS,EAAE,qDAAwB;gBACnC,SAAS,EAAE,MAAM;aAClB;SACF;KACF;CACF,CAAC;AAEF,MAIa,yBAAyB;;AAJtC,8DAI0C;6DAA7B,yBAAyB;iIAAzB,yBAAyB,kBAH3B,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,qBAAY;wFAEX,yBAAyB,0CAF1B,qBAAY;kDAEX,yBAAyB;cAJrC,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;AC7BD,sHAAyC;AACzC,8HAA+C;AAC/C,iKAA0E;AAC1E,gMAAyF;AACzF,0HAAqD;AACrD,8HAA+C;AAC/C,6OAAmH;AACnH,kMAAqG;AACrG,4KAA8E;;AAG9E,MAmBa,kBAAkB;;AAnB/B,gDAmBmC;sDAAtB,kBAAkB;mHAAlB,kBAAkB,mBAFlB,CAAC,0CAAmB,CAAC,YAXvB;YACP,qBAAY;YACZ,uDAAyB;YACzB,qBAAY;YACZ,2BAAmB;SACpB;wFAQU,kBAAkB,mBAjB3B,8CAAqB;QACrB,qDAAwB;QACxB,sEAAgC,aAGhC,qBAAY;QACZ,uDAAyB;QACzB,qBAAY;QACZ,2BAAmB,aAGnB,8CAAqB;QACrB,qDAAwB;QACxB,sEAAgC;kDAIvB,kBAAkB;cAnB9B,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,8CAAqB;oBACrB,qDAAwB;oBACxB,sEAAgC;iBACjC;gBACD,OAAO,EAAE;oBACP,qBAAY;oBACZ,uDAAyB;oBACzB,qBAAY;oBACZ,2BAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,8CAAqB;oBACrB,qDAAwB;oBACxB,sEAAgC;iBACjC;gBACD,SAAS,EAAE,CAAC,0CAAmB,CAAC;aACjC;;;;;;;;;;;;;;;;;ACTD,IAAY,uBAKX;AALD,WAAY,uBAAuB;IACjC,iFAAc;IACd,qEAAQ;IACR,qFAAa;IACb,mFAAY;AACd,CAAC,EALW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAKlC;AACD,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,+DAAY;IACZ,uEAAW;AACb,CAAC,EAHW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAG3B;AACD,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,mDAAO;IACP,6CAAS;AACX,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;;;;;;;;;;;;;;;;ACjCD,sHAAkD;;;AAElD,MAKa,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;AAVH,sDAYC;0FAPY,qBAAqB;0DAArB,qBAAqB;QCPlC,8BACI;QAAA,gCAA+B;QACnC,iBAAM;;kDDKO,qBAAqB;cALjC,gBAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;;;;AEND,sHAA2C;;;AAK3C,MAGa,gBAAgB;IAE3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;IAC3C,CAAC;;AATH,4CAWC;gFARY,gBAAgB;wDAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;kDAEP,gBAAgB;cAH5B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACPD,sHAA2C;;;AAK3C,MAGa,sBAAsB;IAEjC,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAG,CAAC;IAEzC,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,oBAAoB,CAAC,GAAqB;QACxC,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,UAAU,EAAE;gBACV,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;aAClD;SACF,CAAC,CAAC;IACL,CAAC;;AAjBH,wDAkBC;4FAfY,sBAAsB;8DAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;kDAEP,sBAAsB;cAHlC,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACPD,sHAA2C;AAC3C,+HAA+D;AAE/D,wFAAuD;AACvD,iHAAsD;;;;AAItD,MAGa,WAAW;IAsDtB,YAAoB,UAAsB,EAAU,MAAqB;QAArD,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QArDjE,gBAAW,GAAG,IAAI,sBAAe,CAAU,IAAI,CAAC,CAAC;QAClD,oBAAe,GAAG,KAAK,CAAC;QAE/B,8CAA8C;QAC9C,UAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAC3B,eAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAC1C,eAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAC3C,CAAC;QAEF,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IA0C2E,CAAC;IAvCvE,YAAY,CAAC,OAAa;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC;aACtE,IAAI,CACH,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAO,UAAU,CAAC,CAAC,CAC/C,CAAC;IACN,CAAC;IAEM,KAAK,CAAC,IAAU;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACzE,eAAG,CAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5D,CAAC,CAAC,EACF,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAO,YAAY,CAAC,CAAC,CACjD,CAAC;IACJ,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1D,OAAO,SAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,uDAAuD;QACvD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5C,OAAO,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,cAAc;QACZ,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5C,OAAO,OAAO,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;IACtG,CAAC;;AAxDH,kCA2DC;sEAxDY,WAAW;mDAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;kDAEP,WAAW;cAHvB,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACVD,sHAAyC;AACzC,8HAA+C;AAC/C,+HAAyD;AACzD,gMAAqF;AACrF,oIAAkD;AAClD,kKAAmE;;AAGnE,MAea,oBAAoB;;AAfjC,oDAeqC;wDAAxB,oBAAoB;uHAApB,oBAAoB,mBAVpB;QACT,0BAAW;QACX,qCAAgB;QAChB;YACE,OAAO,EAAE,wBAAiB;YAC1B,QAAQ,EAAE,iDAAsB;YAChC,KAAK,EAAE,IAAI;SACZ;KACF,YAXQ;YACP,qBAAY;SACb;wFAWU,oBAAoB,cAZ7B,qBAAY;kDAYH,oBAAoB;cAfhC,eAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,qBAAY;iBACb;gBACD,SAAS,EAAE;oBACT,0BAAW;oBACX,qCAAgB;oBAChB;wBACE,OAAO,EAAE,wBAAiB;wBAC1B,QAAQ,EAAE,iDAAsB;wBAChC,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;;;;;;;;;;;;;;;ACtBD,sHAAyC;AACzC,8HAA+C;AAC/C,qIAA4D;AAC5D,mIAAuD;AACvD,qIAA4D;AAC5D,mIAAuD;AACvD,8HAA+C;AAC/C,mHAAoD;AACpD,wJAA0E;;AAG1E,MAkBa,UAAU;;AAlBvB,gCAkB2B;8CAAd,UAAU;mGAAV,UAAU,kBAbZ;YACP,qBAAY;YACZ,oBAAa;YACb,oBAAa;YACb,qBAAY;YACZ,0BAAW;YACX,wCAAkB;SACnB;wFAMU,UAAU,mBAhBnB,kCAAe;QACf,kCAAe,aAGf,qBAAY;QACZ,oBAAa;QACb,oBAAa;QACb,qBAAY;QACZ,0BAAW;QACX,wCAAkB,aAGlB,kCAAe;QACf,kCAAe;kDAGN,UAAU;cAlBtB,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kCAAe;oBACf,kCAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,qBAAY;oBACZ,oBAAa;oBACb,oBAAa;oBACb,qBAAY;oBACZ,0BAAW;oBACX,wCAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,kCAAe;oBACf,kCAAe;iBAChB;aACF;;;;;;;;;;;;;;;;;AC5BD,sHAAkD;;AAElD,MAKa,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;AAVH,0CAYC;8EAPY,eAAe;oDAAf,eAAe;QCP5B,iCAEI;QACA,8BAEI;QACA,8BAEI;QACA,8BAEI;QACA,6BAA2B;QAAA,+DAA+C;QAAA,iBAAK;QAC/E,yBAAG;QAAA,2CAA2B;QAAA,iBAAI;QAEtC,iBAAM;QAGN,wBAEA;QACA,8BAEI;QACA,8BAA2B;QAAA,4BAAW;QAAA,iBAAK;QAE3C,8BACI;QAAA,2BACI;QAAA,6BAAa;QAAA,uBAAM;QAAA,iBAAI;QAC3B,iBAAK;QACT,iBAAK;QAET,iBAAM;QAIN,+BAEI;QACA,8BAA2B;QAAA,sBAAK;QAAA,iBAAK;QACrC,0BACI;QAAA,wBAA+B;QAAC,0DAAmC;QAAA,iBAAI;QAC3E,0BACI;QAAA,yBAAmC;QAAC,kCAAgB;QAAA,iBAAI;QAC5D,0BACI;QAAA,yBAAgC;QAAC,oBAAE;QAAA,iBAAI;QAC3C,0BACI;QAAA,yBAAgC;QAAC,iCAAe;QAAA,iBAAI;QAC5D,iBAAM;QAGV,iBAAM;QAGV,iBAAM;QAIN,gCAAgD;QAAA,0DAAmC;QAAA,iBAAM;QAG7F,iBAAS;;kDDtDI,eAAe;cAL3B,gBAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;AEND,sHAA6D;;;;;;ICGhD,6BAA+I;IAAA,2BAAW;IAAA,iBAAI;;IAAtI,iDAAmC;;;IAC3D,6BAAiI;IAAA,uBAAO;IAAA,iBAAI;;IAApH,0CAA4B;;;;IACpD,6BAAiG;IAAzE,2KAAoB;IAAqD,uBAAO;IAAA,iBAAI;;;IAE5G,6BAA0G;IAAA,sBAAM;IAAA,iBAAI;;IAA5F,4CAA8B;;;IAC3D,2BAAyC;IAAA,8BAAQ;IAAA,YAAwC;IAAA,iBAAS;IAAA,iBAAM;;;IAAvD,eAAwC;IAAxC,oFAAwC;;ADJjG,MAKa,eAAe;IAE1B,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE/C,QAAQ,KAAU,CAAC;IAEnB,WAAW,KAAU,CAAC;IAEtB,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;;AAfH,0CAgBC;8EAXY,eAAe;oDAAf,eAAe;QCT5B,8BACI;QAAA,8BACI;QAAA,2BAAK;QAAA,4BAAqF;QAAA,uCAAa;QAAA,iBAAI;QAAA,iBAAM;QACjH,2BAAK;QAAA,4DAA+I;QAAe,iBAAM;QACzK,2BAAK;QAAA,4DAAiI;QAAW,iBAAM;QACvJ,2BAAK;QAAA,8DAAiG;QAAW,iBAAM;QACvH,4BAAK;QAAA,6BAAgG;QAAA,wBAAO;QAAA,iBAAI;QAAA,iBAAM;QACtH,4BAAK;QAAA,8DAA0G;QAAU,iBAAM;QAC/H,kEAAyC;QAC7C,iBAAM;QACN,kCAAoH;QAAA,sCAAgB;QAAA,iBAAS;QAC7I,8BACI;QAAA,iCAA+B;QACnC,iBAAI;QACR,iBAAM;;QAZ+B,eAAsB;QAAtB,oCAAsB;QACwC,eAAoC;QAApC,uDAAoC;QAC3C,eAAoC;QAApC,uDAAoC;QACtE,eAAmC;QAAnC,sDAAmC;QACxD,eAA8B;QAA9B,4CAA8B;QACC,eAAmC;QAAnC,sDAAmC;QAC1F,eAAmC;QAAnC,sDAAmC;QAEM,eAAuC;QAAvC,qDAAuC;;kDDDhF,eAAe;cAL3B,gBAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;AERD,sHAA6D;AAM7D,gMAAoG;AACpG,6HAA0D;;;;;;;;ICP1D,0CAEkB;IAF2J,2NAAiC;IAE9M,iBAAkB;;;IAF8E,qDAAgC;;ADUhI,MAKa,aAAa;IA8BxB,YAAmB,mBAAwC,EACvC,MAAqB;QADtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,WAAM,GAAN,MAAM,CAAe;QA7BlC,yBAAoB,GAAmB,EAAE,CAAC;QAG1C,eAAU,GAAG;YAClB,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;YACxE,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;YACtD,EAAE,UAAU,EAAE,cAAc,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;SACnE,CAAC;QACK,gBAAW,GAAgB;YAChC,yBAAyB,EAAE,KAAK;YAChC,uBAAuB,EAAE,KAAK;SAC/B,CAAC;QACK,kBAAa,GAAW;YAC7B,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,mCAAmC,EAAE,IAAI;YACzC,YAAY,EAAE;gBACZ,WAAW,EAAE,IAAI;aAClB;YACD,KAAK,EAAE,GAAG;YACV,SAAS,EAAE,IAAI;SAChB,CAAC;QACK,wBAAmB,GAAG;YAC3B,cAAc,EAAE,gDAAqB;SACtC,CAAC;QAEK,0BAAqB,GAAG,IAAI,2BAAY,EAAE,CAAC;QAIhD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;IACzE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;YACjE,IAAI,EAAE,CAAC,GAAqC,EAAE,EAAE;gBAC9C,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC;YACD,KAAK,EAAE,CAAC,GAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,GAAG,GAAG,CAAC,CAAC;YAC5D,CAAC;YACD,QAAQ,KAAW,CAAC;SACrB,CAAC,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACT,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;IAED,WAAW,CAAC,MAA8C;QACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;IACxC,CAAC;;AA3DH,sCA4DC;0EAvDY,aAAa;kDAAb,aAAa;QCf1B,sFAEA;;QAFiB,0DAAuC;;kDDe3C,aAAa;cALzB,gBAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;;;;AEdD,sHAAkD;;AAElD,MAKa,gBAAgB;IAE3B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;AATrB,4CAUC;gFALY,gBAAgB;qDAAhB,gBAAgB;QCP7B,8BACI;QAAA,8BACI;QAAA,8BACI;QAAA,0BAAI;QAAA,uBAAO;QAAA,iBAAK;QAChB,8BACI;QAAA,6BAA2B;QAAA,qBAAK;QAAA,iBAAK;QACrC,yBACI;QAAA,uBAA+B;QAAC,0DAAmC;QAAA,iBAAI;QAC3E,0BACI;QAAA,wBAAmC;QAAC,kCAAgB;QAAA,iBAAI;QAC5D,0BACI;QAAA,wBAAgC;QAAC,oBAAE;QAAA,iBAAI;QAC3C,0BACI;QAAA,wBAAgC;QAAC,iCAAe;QAAA,iBAAI;QAC5D,iBAAM;QAEV,iBAAM;QACV,iBAAM;QACV,iBAAM;;kDDXO,gBAAgB;cAL5B,gBAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;;;;AEND,sHAAkD;AAClD,0HAAoE;AAIpE,+HAAyD;;;;;;;;;ICKrC,2BACI;IAAA,kDACJ;IAAA,iBAAM;;;IAKN,2BACI;IAAA,0CACJ;IAAA,iBAAM;;ADV1B,MAMa,kBAAkB;IAI7B,YAAoB,EAAe,EACf,MAAc,EACd,MAAqB,EACrB,iBAAoC,EACpC,WAAwB;QAJxB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CACxE,CAAC;IACJ,CAAC;IAED,KAAK;QAEH,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAEhD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBACzC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChB,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;iBAC3B;qBAAM,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;oBAChC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClD,4CAA4C;iBAC1C;gBACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;gBAChB,IAAI,KAAK,YAAY,wBAAiB,EAAE;oBACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;oBAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;iBACpD;YACH,CAAC,CAAC,CAAC;SAEN;IACH,CAAC;;AAlDH,gDAoDC;oFA9CY,kBAAkB;uDAAlB,kBAAkB;QCf/B,8BACI;QAAA,8BACI;QAAA,8BACI;QAAA,0BAAI;QAAA,0CAAqB;QAAA,iBAAK;QAClC,iBAAM;QACN,8BACI;QAAA,+BACI;QAD+D,mGAAY,WAAO,IAAC;QACnF,8BACI;QAAA,gCAAsB;QAAA,6BAAa;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QACvD,4BACA;QAAA,qEACI;QAER,iBAAM;QACN,+BACI;QAAA,iCAAsB;QAAA,2BAAK;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC/C,6BACA;QAAA,qEACI;QAER,iBAAM;QACN,+BACI;QAAA,mCAAuE;QAAA,sBAAK;QAAA,iBAAS;QACzF,iBAAM;QACV,iBAAO;QACX,iBAAM;QACV,iBAAM;QACV,iBAAM;;QArBiD,eAAuB;QAAvB,yCAAuB;QAIrD,eAAkC;QAAlC,qDAAkC;QAOlC,eAAkC;QAAlC,qDAAkC;;kDDF9C,kBAAkB;cAN9B,gBAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAE3C;;;;;;;;;;;;;;;;;AEdD,sHAAkD;;;AAGlD,MAKa,oBAAoB;IAE/B,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhD,QAAQ;IACR,CAAC;;AAVH,oDAYC;wFAPY,oBAAoB;yDAApB,oBAAoB;QCRjC,2BACI;QAAA,0BAAI;QAAA,sBAAM;QAAA,iBAAK;QACf,6BACI;QAAA,6BAAkB;QAAA,qBAAK;QAAA,iBAAK;QAC5B,wBAAuB;QACvB,6BAAkB;QAAA,qBAAK;QAAA,iBAAK;QAC5B,wBAAuB;QACvB,8BAAkB;QAAA,qCAAe;QAAA,iBAAK;QACtC,yBAAuB;QAC3B,iBAAK;QACL,kCAAyC;QAAjC,kGAAS,0BAAsB,IAAC;QAAC,iCAAW;QAAA,iBAAS;QACjE,iBAAM;;kDDHO,oBAAoB;cALhC,gBAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;;;;AEPD,sHAAkD;AAClD,0HAAiF;AAEjF,qFAA6C;AAG7C,+HAAyD;;;;;;AAGzD,MAKa,yBAAyB;IAUpC,YAAoB,EAAe,EACf,MAAqB,EACrB,WAAwB,EACxB,MAAc;QAHd,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAPlC,iBAAY,GAAG,mBAAY,CAAC;IAOS,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE;YAChC,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE;YAChC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE;YAC7B,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,MAAM,MAAM,GAAG,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAE9D,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC1E,yBAAyB;gBACzB,QAAQ,IAAI,CAAC,OAAO,EAAE;oBACpB,KAAK,KAAK,CAAC,CAAC;wBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;wBAChD,MAAM;qBACP;oBACD,KAAK,IAAI,CAAC,CAAC;wBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;wBACpF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;wBAC9B,MAAM;qBACP;oBACD,OAAO,CAAC,CAAC;wBACP,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;wBAC9B,MAAM;qBACP;iBACF;YACH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;gBAChB,IAAI,KAAK,YAAY,wBAAiB,EAAE;oBACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAChD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;oBAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;iBACpD;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;AA/DH,8DAgEC;kGA3DY,yBAAyB;8DAAzB,yBAAyB;QCdtC,8BACI;QAAA,8BACI;QAAA,8BACI;QAAA,0BAAI;QAAA,4CAAuB;QAAA,iBAAK;QACpC,iBAAM;QACN,8BACI;QAAA,+BACI;QADiC,0GAAY,kBAAc,IAAC;QAC5D,8BACI;QAAA,gCAAsB;QAAA,uCAAmB;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC7D,4BACJ;QAAA,iBAAM;QACN,+BACI;QAAA,iCAAsB;QAAA,2BAAK;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC/C,4BACJ;QAAA,iBAAM;QACN,+BACI;QAAA,kCAAmB;QAAA,sBAAK;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QAC5C,6BACJ;QAAA,iBAAM;QACN,+BACI;QAAA,kCAAkB;QAAA,oBAAG;QAAA,4BAAK;QAAA,kBAAC;QAAA,iBAAM;QAAA,iBAAQ;QACzC,mCACE;QAAA,mCAAwC;QAAA,yBAAQ;QAAA,iBAAS;QACzD,mCAAuC;QAAA,wBAAO;QAAA,iBAAS;QACvD,mCAAmC;QAAA,oBAAG;QAAA,iBAAS;QACjD,iBAAS;QACb,iBAAM;QACN,mCAA8C;QAAA,wBAAO;QAAA,iBAAS;QAC9D,mCAA8C;QAAA,4BAAW;QAAA,iBAAS;QACtE,iBAAO;QACX,iBAAM;QACV,iBAAM;QACV,iBAAM;;QA1BY,eAA8B;QAA9B,gDAA8B;QAgBlB,gBAA+B;QAA/B,iDAA+B;QAC/B,eAA8B;QAA9B,gDAA8B;QAC9B,eAA0B;QAA1B,4CAA0B;;kDDV3C,yBAAyB;cALrC,gBAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;;;;AEMD,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,uDAAQ;IACR,qDAAO;IACP,6CAAG;AACL,CAAC,EAJW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAIvB;;;;;;;;;;;;;;;;ACvBD,sHAAkD;;;AAElD,MAKa,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;AAVH,sCAYC;0EAPY,aAAa;kDAAb,aAAa;QCP1B,8BACI;QAAA,gCAA+B;QACnC,iBAAM;;kDDKO,aAAa;cALzB,gBAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;;;;AEND,sHAAyC;AACzC,8HAAuD;AACvD,6LAA4F;AAC5F,4HAAsD;AACtD,2IAA+D;AAC/D,0JAAuE;AACvE,uLAAwF;AACxF,oKAA6E;;;AAG7E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8BAAa;QACxB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC9B,WAAW,EAAE,CAAC,qCAAgB,CAAC;gBAC/B,SAAS,EAAE,uDAAyB;aACrC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;gBAC1B,SAAS,EAAE,yCAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;gBAC1B,SAAS,EAAE,oCAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;gBACzB,SAAS,EAAE,6CAAoB;aAChC;SACF;KACF;CAEF,CAAC;AAGF,MAIa,kBAAkB;;AAJ/B,gDAImC;sDAAtB,kBAAkB;mHAAlB,kBAAkB,kBAHpB,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,qBAAY;wFAEX,kBAAkB,0CAFnB,qBAAY;kDAEX,kBAAkB;cAJ9B,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;AC7CD,sHAAyC;AACzC,8HAA+C;AAC/C,oIAA4D;AAC5D,6LAA4F;AAC5F,8HAA+C;AAC/C,0HAAkE;AAClE,4HAAsD;AACtD,2IAA+D;AAC/D,0JAAuE;AACvE,oKAA6E;AAC7E,qNAA0G;AAC1G,+HAAyD;;AAGzD,MA6Ba,WAAW;;AA7BxB,kCA6B4B;+CAAf,WAAW;qGAAX,WAAW,mBARX;QACT;YACE,OAAO,EAAE,wBAAiB;YAC1B,QAAQ,EAAE,iDAAsB;YAChC,KAAK,EAAE,IAAI,CAAC,kEAAkE;SAC/E;KACF,YAnBQ;YACP,qBAAY;YACZ,yCAAkB;YAClB,qBAAY;YACZ,2BAAmB;SACpB;wFAgBU,WAAW,mBA3BpB,uDAAyB;QACzB,8BAAa;QACb,oCAAgB;QAChB,yCAAkB;QAClB,6CAAoB,aAGpB,qBAAY;QACZ,yCAAkB;QAClB,qBAAY;QACZ,2BAAmB,aAGnB,uDAAyB;QACzB,8BAAa;QACb,oCAAgB;QAChB,yCAAkB;QAClB,6CAAoB;kDAUX,WAAW;cA7BvB,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,uDAAyB;oBACzB,8BAAa;oBACb,oCAAgB;oBAChB,yCAAkB;oBAClB,6CAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,qBAAY;oBACZ,yCAAkB;oBAClB,qBAAY;oBACZ,2BAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uDAAyB;oBACzB,8BAAa;oBACb,oCAAgB;oBAChB,yCAAkB;oBAClB,6CAAoB;iBACrB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,wBAAiB;wBAC1B,QAAQ,EAAE,iDAAsB;wBAChC,KAAK,EAAE,IAAI,CAAC,kEAAkE;qBAC/E;iBACF;aACF;;;;;;;;;;;;;;;;;AC1CD,sHAA6D;;;;;;ICEzD,iCAA2E;IAAhC,qMAA+B;IAAC,uBAA+C;IAAA,iBAAM;;;IAChI,2BAA4C;IAAA,uBAAiD;IAAA,iBAAM;;;IACnG,8BAAkF;IAAA,uBAAiD;IAAA,iBAAM;;;IAA3E,wCAAmB;;;IACjF,8BAAoF;IAAA,wBAAkD;IAAA,iBAAM;;;IAA7E,yCAAoB;;ADFvF,MAKa,qBAAqB;IAShC;QANO,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,WAAM,GAAG,EAAE,CAAC;QACZ,kBAAa,GAAG,IAAI,CAAC;IAGZ,CAAC;IAEjB,MAAM,CAAC,MAAW;QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa,CAAC,KAAiB;QAC7B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC1D,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACxD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE;YAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;SACxB;IACH,CAAC;IAED,qBAAqB,CAAC,KAAU;QAC9B,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;YACxC,KAAK,GAAG,MAAM,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE;YAChD,KAAK,GAAG,EAAE,CAAC;SACZ;aAAM;YACL,KAAK,GAAG,KAAK,CAAC;SACf;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;;AAlDH,sDAoDC;0FA/CY,qBAAqB;0DAArB,qBAAqB;;;;;;QCRlC,8BACI;QADsB,qGAAS,iCAA6B,IAAC;QAC7D,2BAAK;QAAA,YAAsB;QAAA,iBAAM;QACjC,sEAA2E;QAC3E,sEAA4C;QAC5C,sEAAkF;QAClF,sEAAoF;QACxF,iBAAM;;QALG,eAAsB;QAAtB,4CAAsB;QACtB,eAAyB;QAAzB,4CAAyB;QACzB,eAAsC;QAAtC,yDAAsC;QACtC,eAAwD;QAAxD,+EAAwD;QACxD,eAAyD;QAAzD,gFAAyD;;kDDGrD,qBAAqB;cALjC,gBAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;kBAQE,gBAAS;mBAAC,YAAY,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;;;;;;;;;;;;;;;;AEf1C,sHAA2C;AAC3C,+HAA+D;AAC/D,wFAAsC;AACtC,iHAAwD;;;;AAIxD,MAGa,mBAAmB;IAM9B,YAAoB,UAAsB,EAAU,MAAqB;QAArD,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QAJzE,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IAE2E,CAAC;IAEvE,eAAe,CAAC,eAAsC,EAAE,UAAkB,EAAE,MAAc;QAC/F,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAe,aAAa,UAAU,SAAS,MAAM,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;aACnH,IAAI,CACH,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAe,kBAAkB,CAAC,CAAC,CAC/D,CAAC;IACN,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,wBAAwB,CAAC,CAAC,IAAI,CACvE,eAAG,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,GAAG,aAAa,CAAC,CAAC,EAAE,iBAAK,EAAE,CAC5F,CAAC;IACJ,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1D,OAAO,SAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;;AA9BH,kDA+BC;sFA5BY,mBAAmB;2DAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;kDAEP,mBAAmB;cAH/B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACTD;;GAEG;AACH,MAAsB,aAAa;CAmBlC;AAnBD,sCAmBC;AAED;;GAEG;AACH,MAAM,WAAW,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;AAE7B;;;GAGG;AACH,MAAa,kBAAmB,SAAQ,aAAa;IAEnD,KAAK,CAAC,GAAW;QACf,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,GAAW;QACf,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,GAAW;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;CACF;AAbD,gDAaC;AAED;;;GAGG;AACH,MAAa,iBAAkB,SAAQ,aAAa;IAApD;;QAEE,UAAK,GAAG,WAAW,CAAC;IAStB,CAAC;IAPC,KAAK,CAAC,GAAW;QACf,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,GAAW;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;CACF;AAXD,8CAWC;AAED;;;GAGG;AACH,MAAa,kBAAmB,SAAQ,aAAa;IAArD;;QAEE,UAAK,GAAG,WAAW,CAAC;QACpB,SAAI,GAAG,WAAW,CAAC;IAKrB,CAAC;IAHC,KAAK,CAAC,GAAW;QACf,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;CACF;AARD,gDAQC;;;;;;;;;;;;;;;;AC7ED,sHAA2C;AAC3C,wFAAgD;;AAGhD,MAGa,iBAAiB;IAK5B;QAJA,yCAAyC;QACjC,eAAU,GAAG,IAAI,sBAAe,CAAO,IAAI,CAAC,CAAC;QAC9C,iBAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAEtC,CAAC;IAEhB,SAAS,CAAC,IAAU;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;AAZH,8CAaC;kFAVY,iBAAiB;yDAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;kDAEP,iBAAiB;cAH7B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACND,qKAAyF;AACzF,oMAAuG;AAC1F,mBAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;AACW,4BAAoB,GAAG,mCAAkB,CAAC;AAC1C,kCAA0B,GAAG,0CAAmB,CAAC;;;;;;;;;;;;;;;;ACN9D,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAChE,qKAAyF;AACzF,mMAAsG;AAEzF,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AACW,wBAAgB,GAAG,mCAAkB,CAAC;AACtC,8BAAsB,GAAG,0CAAmB,CAAC;AAE1D;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;ACnBnE,sHAA+C;AAG/C,iHAAyD;;;AAEzD;;GAEG;AAEH,IAAI,yBAAW,CAAC,UAAU,EAAE;IAC1B,qBAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,qCAAwB,gBAAgB,+BAAW;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './modules/home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./modules/users/users.module').then(m => m.UsersModule)\n  },\n  {\n    path: 'announcement',\n    loadChildren: () => import('./modules/announcements/announcement.module').then(m => m.AnnouncementModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    // enableTracing: true, // debuggowanie routing\n    useHash: true,\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './modules/core/authentication/auth/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(protected auth: AuthService,  private router: Router){\n    this.auth.state.subscribe(authorized => {\n      authorized ? this.router.navigate(['user/profile']) :  this.router.navigate(['/']);\n    });\n  }\n}\n","<app-navbar></app-navbar>\n<app-footer></app-footer>","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './modules/home/home.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './modules/core/core.module';\nimport { CommonModule } from '@angular/common';\nimport { LoggerService } from './shared/shared-services/logger/logger.service';\nimport { envProdServiceLogger } from '../environments/environment.prod';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { AnnouncementService } from './shared/shared-services/announcement/announcement.service';\nimport { AgGridHeaderComponent } from './shared/shared-ag-grid-header/ag-grid-header.component';\nimport { AuthenticationModule } from './modules/core/authentication/authentication.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AgGridHeaderComponent\n  ],\n  imports: [\n    CommonModule, // moduł w ktorym zawartę są deryktywy *ngIf, *ngFor\n    BrowserModule.withServerTransition({\n      appId: 'serverApp'\n    }),\n    BrowserModule,\n    AgGridModule.withComponents([]),\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    AuthenticationModule\n  ],\n  exports: [\n    AppComponent,\n    HomeComponent,\n    AgGridHeaderComponent\n  ],\n  providers: [\n    AnnouncementService,\n    {\n      provide: LoggerService,\n      useClass: envProdServiceLogger,\n    }\n  ],\n  entryComponents: [\n    AgGridHeaderComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnnouncementsCategories, AnnouncementType, Announcement } from '../announcement';\nimport { AnnouncementService } from 'src/app/shared/shared-services/announcement/announcement.service';\nimport { LoggerService } from '../../../shared/shared-services/logger/logger.service';\n\n@Component({\n  selector: 'app-add-announcement',\n  templateUrl: './add-announcement.component.html',\n  styleUrls: ['./add-announcement.component.scss']\n})\nexport class AddAnnouncementComponent implements OnInit {\n\n  public announcementForm: FormGroup;\n\n  announcementsCategories?: AnnouncementsCategories;\n  AnnouncementsCategories = AnnouncementsCategories;\n  announcementType?: AnnouncementType;\n  AnnouncementType = AnnouncementType;\n  id_category: string;\n  id_type: string;\n\n  constructor(private fb: FormBuilder,\n    private logger: LoggerService,\n    private announcementService: AnnouncementService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    // this.id_category = +this.route.snapshot.paramMap.get('id_category'); // sniszczyc shaphot ostatnia wersje komponentu\n    // this.id_type = +this.route.snapshot.paramMap.get('id_type');\n    this.announcementForm = this.fb.group({\n\n      title: this.makeFormControl(),\n      price: this.makeFormControl(),\n      surface: this.makeFormControl(),\n      pricePerM: this.makeFormControl(),\n      numberOfRooms: this.makeFormControl(),\n      address: new FormGroup({\n        street: this.makeFormControl(),\n        houseNumber: this.makeFormControl(),\n        postCode: this.makeFormControl(),\n        city: this.makeFormControl(),\n      }),\n      multimedia: this.makeFormControl(),\n      description: this.makeFormControl(),\n      floor: this.makeFormControl(),\n    });\n\n    this.route.paramMap.subscribe(params => {\n      this.id_category = params.get('id_category');\n      this.announcementsCategories = AnnouncementsCategories[this.id_category];\n    });\n    this.route.paramMap.subscribe(params => {\n      this.id_type = params.get('id_type');\n      this.announcementType = AnnouncementType[this.id_type];\n    });\n  }\n\n  makeFormControl(): FormControl {\n    const cloned = new FormControl(null, [Validators.required]);\n    return cloned;\n  }\n\n\n  addAnnouncement(): void {\n    const setAnnouncement: Announcement = {\n      title: this.announcementForm.value.title,\n      price: this.announcementForm.value.price,\n      surface: this.announcementForm.value.surface,\n      pricePerM: this.announcementForm.value.pricePerM,\n      numberOfRooms: this.announcementForm.value.numberOfRooms,\n      address: {\n        street: this.announcementForm.value.address.street,\n        houseNumber: this.announcementForm.value.address.houseNumber,\n        postCode: this.announcementForm.value.address.postCode,\n        city: this.announcementForm.value.address.city,\n      },\n      announcementsCategories: AnnouncementsCategories[this.id_category],\n      announcementType: AnnouncementType[this.id_type],\n      multimedia: this.announcementForm.value.multimedia,\n      description: this.announcementForm.value.description,\n      floor: this.announcementForm.value.floor,\n    };\n\n    this.announcementService.addAnnouncement(setAnnouncement, this.id_category, this.id_type)\n      .subscribe(data => {\n        Syntax:\n        switch (data.success) {\n          case false: {\n            this.logger.error(`Error code ${data.errcode}`);\n            break;\n          }\n          case true: {\n            this.logger.info('The advertisement has been correctly added' + data.respons );\n            this.announcementForm.reset();\n            break;\n          }\n          default: {\n            this.announcementForm.reset();\n            break;\n          }\n        }\n      });\n  }\n}\n","<div class=\"jumbotron content\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading text-center\">\n            <h2>Dodaj ogłoszenie - {{AnnouncementsCategories[this.id_category]}}</h2>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-lg-12\">\n                <div class=\"panel-body\">\n                    <form [formGroup]=\"announcementForm\" (ngSubmit)=\"addAnnouncement()\">\n                        <div class=\"row\">\n                            <div class=\"form-group col-sm-12 col-md-6\">\n                                <label for=\"title\">Tytuł <sup>*</sup></label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"title\" />\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"price\">Cena  <sup>*</sup></label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"price\" />\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"surface\">Powierzchnia  <sup>*</sup></label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"surface\" />\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"pricePerM\">Powierzchnia za m²</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"pricePerM\" />\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"numberOfRooms\">Liczba pokoi</label>\n                                <input type=\"number\" class=\"form-control\" formControlName=\"numberOfRooms\" />\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"floor\">Pietro</label>\n                                <input type=\"number\" class=\"form-control\" formControlName=\"floor\" />\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-4\">\n                                <label for=\"multimedia\">Multimedia</label>\n                                <input required type=\"text\" class=\"form-control\" formControlName=\"multimedia\" />\n                            </div>\n                        </div>\n\n                        <fieldset class=\"border p-2 col-sm-12 col-md-10\">\n\n                            <label>Adres:</label>\n                            <div class=\"row\" formGroupName=\"address\">\n                                <div class=\"form-group col-sm-12 col-md-4\">\n                                    <label for=\"city\">Miasto</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"city\" />\n                                </div>\n                                <div class=\"form-group col-sm-12 col-md-4\">\n                                    <label for=\"street\">Ulica</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"street\" />\n                                </div>\n                                <div class=\"form-group col-sm-12 col-md-2\">\n                                    <label for=\"houseNumber\">Nr domu</label>\n                                    <input type=\"number\" class=\"form-control\" formControlName=\"houseNumber\" />\n                                </div>\n                                <div class=\"form-group col-sm-12 col-md-2\">\n                                    <label for=\"postCode\">Kod pocztowy</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"postCode\" />\n                                </div>\n                            </div>\n                        </fieldset>\n                        <div class=\"row\">\n                            <div class=\"form-group col-sm-12 col-md-8\">\n                                <label for=\"description\">Opis</label>\n                                <textarea class=\"form-control\" formControlName=\"description\" placeholder=\"Opis\" rows=\"3\"></textarea>\n                            </div>\n                            <div class=\"form-group col-sm-12 col-md-2\">\n                                <label for=\"announcementType\">Typ: </label>\n                                <input type=\"text\" class=\"form-control\" [value]=\"AnnouncementType[this.id_type]\" id=\"announcementType\" name=\"announcementType\" disabled />\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-md-4 form-group\">\n                                <button type=\"button\" class=\"btn btn-default\">Resetuj</button>\n                                <button type=\"submit\" class=\"btn btn-success\">Rejestracja</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AnnouncementsCategories, AnnouncementType } from '../announcement';\n\n\n@Component({\n  selector: 'app-add-category-announcement',\n  templateUrl: './add-category-announcement.component.html',\n  styleUrls: ['./add-category-announcement.component.scss']\n})\nexport class AddCategoryAnnouncementComponent implements OnInit {\n\n  announcementsCategories?: AnnouncementsCategories;\n  AnnouncementsCategories = AnnouncementsCategories;\n  announcementsCategoriesLength =  Object.values(AnnouncementsCategories).length;\n  announcementType?: AnnouncementType;\n  AnnouncementType = AnnouncementType;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  keys(): Array<string>{\n    const keys = Object.keys(AnnouncementsCategories);\n    return keys.slice(keys.length / 2, keys.length );\n  }\n}\n","<div class=\"container\">\n    <div>\n        <label for=\"type\">Wybierz kategorie<sup>*</sup></label>\n    </div>\n    <div *ngIf=\"announcementsCategoriesLength >= 0\">\n        <div class=\"text--title\" for=\"category\" *ngFor=\"let enum of keys() let indexOfelementCategorie=index;\">\n            {{ enum}}\n            <span class=\"circles\" *ngIf=\"announcementsCategoriesLength >= 0\">\n      <a class=\"text__link\" [routerLink]=\"['/announcement/category', indexOfelementCategorie ,'type' , indexOfelementType]\"\n        routerLinkActive=\"active\"\n        *ngFor=\"let enum of AnnouncementType | keyvalue let indexOfelementType=index;\">\n        {{AnnouncementType[indexOfelementType]}}</a>\n    </span>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddAnnouncementComponent } from './add-announcement/add-announcement.component';\nimport { AddCategoryAnnouncementComponent } from './add-category-announcement/add-category-announcement.component';\nimport { AnnouncementComponent } from './announcement/announcement.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnnouncementComponent,\n    children: [\n      {\n        path: 'category',\n        data: { title: 'Wybierz kategorie' },\n        component: AddCategoryAnnouncementComponent,\n      },\n      {\n        path: 'category/:id_category/type/:id_type',\n        data: { title: 'Dodaj ogłoszenie' },\n        component: AddAnnouncementComponent,\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnnouncementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnnouncementRoutingModule } from './announcement-routing.module';\nimport { AddAnnouncementComponent } from './add-announcement/add-announcement.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AddCategoryAnnouncementComponent } from './add-category-announcement/add-category-announcement.component';\nimport { AnnouncementService } from '../../shared/shared-services/announcement/announcement.service';\nimport { AnnouncementComponent } from './announcement/announcement.component';\n\n\n@NgModule({\n  declarations: [\n    AnnouncementComponent,\n    AddAnnouncementComponent,\n    AddCategoryAnnouncementComponent\n  ],\n  imports: [\n    CommonModule,\n    AnnouncementRoutingModule,\n    RouterModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    AnnouncementComponent,\n    AddAnnouncementComponent,\n    AddCategoryAnnouncementComponent\n  ],\n  providers: [AnnouncementService]\n})\nexport class AnnouncementModule { }\n","export interface Announcement {\r\n  _id?: number;\r\n  title?: string;\r\n  price?: string;\r\n  surface?: string;\r\n  pricePerM?: string;\r\n  numberOfRooms?: number;\r\n  address?: Address;\r\n  announcementsCategories?: AnnouncementsCategories;\r\n  announcementType?: AnnouncementType;\r\n  multimedia?: string;\r\n  description?: string;\r\n  floor?: number;\r\n}\r\nexport interface Address {\r\n  street?: string;\r\n  houseNumber?: number;\r\n  postCode?: string;\r\n  city?: string;\r\n}\r\nexport enum AnnouncementsCategories {\r\n  Mieszkania = 0,\r\n  Domy = 1,\r\n  'Działki' = 2,\r\n  'Garaże' = 3,\r\n}\r\nexport enum AnnouncementType {\r\n  Sprzedam = 0,\r\n  Wynajmę = 1,\r\n}\r\nexport enum Market {\r\n  Wtóryny,\r\n  Pierwotny,\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.scss']\n})\nexport class AnnouncementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"outlet-container\">\n    <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n    return !this.authService.isAuthenticated;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(this.getAuthorizedRequest(req));\n  }\n\n  getAuthorizedRequest(req: HttpRequest<any>): HttpRequest<any>{\n    return req.clone({\n      setHeaders: {\n        'Authorization': 'Bearer ' + this.auth.getToken()\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Session } from '../../../users/user';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { LoggerService } from '../../../../shared/shared-services/logger/logger.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userSession = new BehaviorSubject<Session>(null);\n  public isAuthenticated = false;\n\n  // state - stan czy użytkownik jest zalogowany\n  state = this.userSession.pipe(\n    map(session => session && !!session.token),\n    tap(state => this.isAuthenticated = state)\n  );\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n\n  public registration(newUser: User): Observable<any> {\n    return this.httpClient.post<User>(`/register`, newUser, this.httpOptions)\n      .pipe(\n        catchError(this.handleError<User>('Add User'))\n      );\n  }\n\n  public login(user: User): Observable<Session> {\n    return this.httpClient.post<Session>('/login', user, this.httpOptions).pipe(\n      tap(state => {\n        this.userSession.next(state); this.isAuthenticated = true;\n      }),\n      catchError(this.handleError<User>('Login user'))\n    );\n  }\n\n  public loginOut(): void {\n    this.isAuthenticated = false;\n    this.userSession.next(null);\n  }\n\n  private handleError<T>(operation = 'operation', result?: T): any {\n    return (error: any): Observable<T> => {\n      this.logger.error(error);\n      this.logger.info(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n\n  getToken(): string | null {\n    // getValue - zwraca ostatnią wartość w BehaviorSubject\n    const session = this.userSession.getValue();\n    return session && session.token;\n  }\n\n  getCurrentUser(): Session | string {\n    const session = this.userSession.getValue();\n    return session && session !== null && session.respons !== null ? session.respons.username : session;\n  }\n  constructor(private httpClient: HttpClient, private logger: LoggerService) { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptorService } from './auth-interceptor/auth-interceptor.service';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuardService } from './auth-guard/auth-guard.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    }\n  ],\n})\nexport class AuthenticationModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatListModule } from '@angular/material/list';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { RouterModule } from '@angular/router';\nimport { UsersModule } from '../users/users.module';\nimport { AnnouncementModule } from '../announcements/announcement.module';\n\n\n@NgModule({\n  declarations: [\n    FooterComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatTabsModule,\n    RouterModule,\n    UsersModule,\n    AnnouncementModule\n  ],\n  exports: [\n    FooterComponent,\n    NavbarComponent,\n  ]\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small blue pt-4\">\n\n    <!-- Footer Links -->\n    <div class=\"container-fluid text-center text-md-left\">\n\n        <!-- Grid row -->\n        <div class=\"row\">\n\n            <!-- Grid column -->\n            <div class=\"col-md-6 mt-md-0 mt-3\">\n\n                <!-- Content -->\n                <h5 class=\"text-uppercase\">Projekt rezalizowany na potrzeny nauki Angular.</h5>\n                <p>Wykonawca Katarzyna Bulicka</p>\n\n            </div>\n            <!-- Grid column -->\n\n            <hr class=\"clearfix w-100 d-md-none pb-3\">\n\n            <!-- Grid column -->\n            <div class=\"col-md-3 mb-md-0 mb-3\">\n\n                <!-- Links -->\n                <h5 class=\"text-uppercase\">O projekcie</h5>\n\n                <ul class=\"list-unstyled\">\n                    <li>\n                        <a href=\"#!\">O mnie</a>\n                    </li>\n                </ul>\n\n            </div>\n            <!-- Grid column -->\n\n            <!-- Grid column -->\n            <div class=\"col-md-3 mb-md-0 mb-3\">\n\n                <!-- Links -->\n                <h5 class=\"text-uppercase\">Adres</h5>\n                <p>\n                    <i class=\"fa fa-home mr-3\"></i> Warszawa 02-942 Konstancińska 7b/36</p>\n                <p>\n                    <i class=\"fa fa-envelope mr-3\"></i> test@example.com</p>\n                <p>\n                    <i class=\"fa fa-phone mr-3\"></i> + </p>\n                <p>\n                    <i class=\"fa fa-print mr-3\"></i> + 01 234 567 89</p>\n            </div>\n            <!-- Grid column -->\n\n        </div>\n        <!-- Grid row -->\n\n    </div>\n    <!-- Footer Links -->\n\n    <!-- Copyright -->\n    <div class=\"footer-copyright text-center py-3\"> © 2020 Copyright: Katarzyna Bulicka</div>\n    <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../authentication/auth/auth.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {}\n\n  loginOut(): void {\n    this.authService.loginOut();\n  }\n}\n","<div class=\"card-body\">\n    <nav class=\"navbar navbar-light bg-light\">\n        <div><a class=\"navbar-brand\" [routerLink]=\"'/home'\" routerLinkActive=\"active\" name='home'>Strona główna</a></div>\n        <div><a class=\"navbar-brand\" [routerLink]=\"'/user/registration'\" routerLinkActive=\"active\" *ngIf=\"!authService.isAuthenticated\" name='registration'>Rejestracja</a></div>\n        <div><a class=\"navbar-brand\" [routerLink]=\"'/user/login'\" routerLinkActive=\"active\" *ngIf=\"!authService.isAuthenticated\" name='login'>Zaloguj</a></div>\n        <div><a class=\"navbar-brand\" (click)=\"loginOut()\" *ngIf=\"authService.isAuthenticated\" name='loginOut'>Wyloguj</a></div>\n        <div><a class=\"navbar-brand\" [routerLink]=\"'/user/contact'\" routerLinkActive=\"active\" name='contact'>Kontakt</a></div>\n        <div><a class=\"navbar-brand\" [routerLink]=\"'/user/profile'\" *ngIf=\"authService.isAuthenticated\" name='profile'>Profil</a></div>\n        <div *ngIf=\"authService.isAuthenticated\"><strong>Cześć, {{authService.getCurrentUser()}} </strong></div>\n    </nav>\n    <button class=\"btn btn-default link-button--save\" [routerLink]=\"'/announcement/category'\" routerLinkActive=\"active\">Dodaj ogłoszenie</button>\n    <p class=\"card-text\">\n        <router-outlet></router-outlet>\n    </p>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { GridOptions } from '@ag-grid-community/all-modules';\r\nimport { ColDef, GridApi, ColumnApi } from 'ag-grid-community';\r\nimport { AnnouncementService } from 'src/app/shared/shared-services/announcement/announcement.service';\r\nimport { Announcement } from '../announcements/announcement';\r\nimport { LoggerService } from '../../shared/shared-services/logger/logger.service';\r\nimport { AgGridHeaderComponent } from '../../shared/shared-ag-grid-header/ag-grid-header.component';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  public rowDatatAnnouncement: Announcement[] = [];\r\n  public gridApi: GridApi | undefined;\r\n  public gridColumnApi!: ColumnApi;\r\n  public columnDefs = [\r\n    { headerName: 'Miasto', field: 'title', colId: 'title', editable: true },\r\n    { headerName: 'Cena', field: 'price', colId: 'price' },\r\n    { headerName: 'Powierzchnia', field: 'surface', colId: 'surface' }\r\n  ];\r\n  public gridOptions: GridOptions = {\r\n    suppressRowClickSelection: false,\r\n    rowMultiSelectWithClick: false,\r\n  };\r\n  public defaultColumn: ColDef = {\r\n    filter: true,\r\n    sortable: true,\r\n    headerCheckboxSelectionFilteredOnly: true,\r\n    filterParams: {\r\n      clearButton: true\r\n    },\r\n    width: 350,\r\n    resizable: true,\r\n  };\r\n  public frameworkComponents = {\r\n    agColumnHeader: AgGridHeaderComponent,\r\n  };\r\n  public getDataAnnouncement$;\r\n  public resutDataAnnouncement = new Subscription();\r\n\r\n  constructor(public announcementService: AnnouncementService,\r\n              private logger: LoggerService) {\r\n    this.getDataAnnouncement$ = this.announcementService.getAnnouncement();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.resutDataAnnouncement.add(this.getDataAnnouncement$.subscribe({\r\n      next: (Res: { [x: string]: Announcement[]; }) => {\r\n        this.rowDatatAnnouncement = Res['respons'];\r\n      },\r\n      error: (Err: Error) => {\r\n        this.logger.info('Błąd pobrania ogłoszeń. Error: ' + Err);\r\n      },\r\n      complete(): void { }\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.resutDataAnnouncement.unsubscribe();\r\n  }\r\n\r\n  onGridReady(params: { api: GridApi; columnApi: ColumnApi }): void {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n}\r\n","<ag-grid-angular *ngIf='rowDatatAnnouncement.length > 0' class=\"ag-theme-material ag-grid__tab\" [rowData]=\"rowDatatAnnouncement\" [frameworkComponents]=\"frameworkComponents\" (gridReady)=\"onGridReady($event)\" [columnDefs]=\"columnDefs\" [gridOptions]='gridOptions'\r\n    [defaultColDef]=\"defaultColumn\">\r\n</ag-grid-angular>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"jumbotron content\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-body\">\n            <h2>Kontakt</h2>\n            <div class=\"col-md-3 mb-md-0 mb-3\">\n                <h5 class=\"text-uppercase\">Adres</h5>\n                <p>\n                    <i class=\"fa fa-home mr-3\"></i> Warszawa 02-942 Konstancińska 7b/36</p>\n                <p>\n                    <i class=\"fa fa-envelope mr-3\"></i> test@example.com</p>\n                <p>\n                    <i class=\"fa fa-phone mr-3\"></i> + </p>\n                <p>\n                    <i class=\"fa fa-print mr-3\"></i> + 01 234 567 89</p>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/authentication/auth/auth.service';\nimport { UserSharedService } from '../../../shared/shared-services/user/user-shared.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { LoggerService } from '../../../shared/shared-services/logger/logger.service';\n\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss'],\n\n})\nexport class UserLoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private logger: LoggerService,\n              private userSharedService: UserSharedService,\n              private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  isFieldInvalid(field: string): boolean {\n    return (\n      (!this.loginForm.get(field).valid && this.loginForm.get(field).touched)\n    );\n  }\n\n  login(): void {\n\n    if (this.loginForm.dirty && this.loginForm.valid) {\n\n      this.authService.login(this.loginForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n          } else if (data.success === true) {\n            this.userSharedService.shareUser(data.respons);\n         //   this.router.navigate(['user/profile']);\n          }\n          this.loginForm.reset();\n        }, (Error: any) => {\n          if (Error instanceof HttpErrorResponse) {\n            this.logger.error('Error name: ' + Error.error);\n            this.logger.error('Error status text: ' + Error.statusText);\n            this.logger.error('Error status: ' + Error.status);\n          }\n        });\n\n    }\n  }\n\n}\n","<div class=\"jumbotron content\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading text-center\">\n            <h4>Logowanie użytkownika</h4>\n        </div>\n        <div class=\"panel-body\">\n            <form id=\"login-form\" class=\"example-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nazwa klienta<sup>*</sup></label>\n                    <input required type=\"text\" class=\"form-control\" formControlName=\"username\" name=\"username\">\n                    <div *ngIf=\"isFieldInvalid('username')\">\n                        Wprowadź nazwę klienta\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Hasło<sup>*</sup></label>\n                    <input required type=\"password\" class=\"form-control\" formControlName=\"password\" name=\"password\">\n                    <div *ngIf=\"isFieldInvalid('password')\">\n                        Wprowadź hasło\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-success\" id=\"Login\" title=\"Login\">Login</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/authentication/auth/auth.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h3>Profil</h3>\n    <dl class=\"row\">\n        <dt class=\"col-3\">Nazwa</dt>\n        <dd class=\"col-9\"></dd>\n        <dt class=\"col-3\">Email</dt>\n        <dd class=\"col-9\"></dd>\n        <dt class=\"col-3\">Typ użytkownika</dt>\n        <dd class=\"col-9\"></dd>\n    </dl>\n    <button (click)='authService.loginOut()'>Wyloguj się</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User, CustomerType } from '../user';\nimport { AuthService } from '../../core/authentication/auth/auth.service';\nimport { LoggerService } from '../../../shared/shared-services/logger/logger.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.scss']\n})\nexport class UserRegistrationComponent implements OnInit {\n\n  userName: string;\n  password: string;\n  email: string;\n  type: CustomerType;\n  CustomerType = CustomerType;\n  registrationForm: FormGroup;\n  user: User;\n\n  constructor(private fb: FormBuilder,\n              private logger: LoggerService,\n              private authService: AuthService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group({\n      username: this.makeFormControl(),\n      password: this.makeFormControl(),\n      email: this.makeFormControl(),\n      type: this.makeFormControl(),\n    });\n  }\n\n  makeFormControl(): FormControl {\n    const cloned = new FormControl('', [Validators.required]);\n    return cloned;\n  }\n\n  registration(): void {\n    if (this.registrationForm.dirty && this.registrationForm.valid) {\n\n      this.authService.registration(this.registrationForm.value).subscribe(data => {\n        // data - jest Observerem\n        switch (data.success) {\n          case false: {\n            this.logger.error(`Error code ${data.message}`);\n            break;\n          }\n          case true: {\n            this.logger.info('User created successfully, please login to access your account.');\n            this.router.navigate(['user/login']);\n            this.registrationForm.reset();\n            break;\n          }\n          default: {\n            this.registrationForm.reset();\n            break;\n          }\n        }\n      }, (Error: any) => {\n        if (Error instanceof HttpErrorResponse) {\n          this.logger.error('Error name: ' + Error.error);\n          this.logger.error('Error status text: ' + Error.statusText);\n          this.logger.error('Error status: ' + Error.status);\n        }\n      });\n    }\n  }\n}\n","<div class=\"jumbotron content\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading text-center\">\n            <h2>Rejestracja użytkownika</h2>\n        </div>\n        <div class=\"panel-body\">\n            <form [formGroup]=\"registrationForm\" (ngSubmit)=\"registration()\">\n                <div class=\"form-group\">\n                    <label for=\"userName\">Nazwa użytkownika  <sup>*</sup></label>\n                    <input required type=\"text\" class=\"form-control\" formControlName=\"username\" id=\"username\" name=\"username\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Hasło<sup>*</sup></label>\n                    <input required type=\"text\" class=\"form-control\" formControlName=\"password\" id=\"password\" name=\"password\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email<sup>*</sup></label>\n                    <input required type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" name=\"email\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"type\">Typ<sup>*</sup></label>\n                    <select required class=\"form-control\" formControlName=\"type\" name=\"type\">\n                      <option [value]=\"CustomerType.Standard\">Standard</option>\n                      <option [value]=\"CustomerType.Premium\">Premium</option>\n                      <option [value]=\"CustomerType.VIP\">VIP</option>\n                    </select>\n                </div>\n                <button type=\"button\" class=\"btn btn-default\">Resetuj</button>\n                <button type=\"submit\" class=\"btn btn-success\">Rejestracja</button>\n            </form>\n        </div>\n    </div>\n</div>\n","export interface User {\n  id?: number;\n  username: string;\n  photoUrl?: string;\n  description?: string;\n  password?: string;\n  email?: string;\n  age?: number;\n  address?: Address;\n  type?: CustomerType;\n  categories?: string[];\n}\n\nexport interface Address {\n  street: string;\n  houseNumber: number;\n  city: string;\n}\n\nexport enum CustomerType {\n  Standard,\n  Premium,\n  VIP\n}\n\nexport interface Session {\n  success: boolean;\n  message: string;\n  respons?: User;\n  token?: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"outlet-container\">\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\nimport { UserComponent } from './user/user.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { AuthGuardService } from '../core/authentication/auth-guard/auth-guard.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponent,\n    children: [\n      {\n        path: 'registration',\n        data: { title: 'Rejestracja' },\n        canActivate: [AuthGuardService], // jeśli false blokuje przejscie do ścieżki\n        component: UserRegistrationComponent,\n      },\n      {\n        path: 'login',\n        data: { title: 'Zaloguj' },\n        component: UserLoginComponent,\n      },\n      {\n        path: 'contact',\n        data: { title: 'Kontakt' },\n        component: ContactComponent,\n      },\n      {\n        path: 'profile',\n        data: { title: 'Profil' },\n        component: UserProfileComponent,\n      },\n    ]\n  },\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UserComponent } from './user/user.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { AuthInterceptorService } from '../core/authentication/auth-interceptor/auth-interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    UserRegistrationComponent,\n    UserComponent,\n    ContactComponent,\n    UserLoginComponent,\n    UserProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    RouterModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    UserRegistrationComponent,\n    UserComponent,\n    ContactComponent,\n    UserLoginComponent,\n    UserProfileComponent\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true // przekazanie wszystkich np serviców do tablicy HTTP_INTERCEPTORS\n    }\n  ]\n})\nexport class UsersModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IHeaderAngularComp } from 'ag-grid-angular/lib/interfaces';\n\n@Component({\n  selector: 'app-ag-grid-header',\n  templateUrl: './ag-grid-header.component.html',\n  styleUrls: ['./ag-grid-header.component.scss']\n})\nexport class AgGridHeaderComponent implements IHeaderAngularComp {\n\n  params: any;\n  public ascSort = '';\n  public descSort = '';\n  public noSort = '';\n  public isSortVisible = true;\n  @ViewChild('menuButton', {static: false}) public menuButton: any;\n\n  constructor() { }\n\n  agInit(params: any): void {\n    this.params = params;\n    this.isSortVisible = !params.hideSort;\n    params.column.addEventListener('sortChanged', this.onSortChanged.bind(this));\n    this.onSortChanged();\n  }\n\n  onMenuClicked(event: MouseEvent): void {\n    this.params.showColumnMenu(this.menuButton.nativeElement);\n    event.stopPropagation();\n  }\n\n  onSortChanged(): void {\n    this.ascSort = this.descSort = this.noSort = 'inactive';\n    if (this.params.column.isSortAscending()) {\n      this.ascSort = 'active';\n    } else if (this.params.column.isSortDescending()) {\n      this.descSort = 'active';\n    } else {\n      this.noSort = 'active';\n    }\n  }\n\n  onColumnSortRequested(event: any): void {\n    let order = '';\n\n    if (this.params.column.isSortAscending()) {\n      order = 'desc';\n    } else if (this.params.column.isSortDescending()) {\n      order = '';\n    } else {\n      order = 'asc';\n    }\n    this.params.setSort(order, event.shiftKey);\n  }\n\n}\n","<div class=\"header__text\" (click)=\"onColumnSortRequested($event)\">\n    <div>{{params.displayName}}</div>\n    <div *ngIf=\"params.enableMenu\" #menuButton (click)=\"onMenuClicked($event)\"><i class=\"header__icon header__menu__icon\"></i></div>\n    <div *ngIf=\"params.column.isFilterActive()\"><i class=\"header__icon header__filter__icon\"></i></div>\n    <div *ngIf=\"params.column.isSortAscending() && isSortVisible\" [ngClass]=\"ascSort\"><i class=\"header__icon header__sortUp__icon\"></i></div>\n    <div *ngIf=\"params.column.isSortDescending() && isSortVisible\" [ngClass]=\"descSort\"><i class=\"header__icon header__sortDown_icon\"></i></div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap, share } from 'rxjs/operators';\nimport { Announcement } from '../../../modules/announcements/announcement';\nimport { LoggerService } from '../logger/logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnouncementService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private httpClient: HttpClient, private logger: LoggerService) { }\n\n  public addAnnouncement(newAnnouncement: Partial<Announcement>, idCategory: string, idType: string): any {\n    return this.httpClient.post<Announcement>(`/category/${idCategory}/type/${idType}`, newAnnouncement, this.httpOptions)\n      .pipe(\n        catchError(this.handleError<Announcement>('Add Announcement'))\n      );\n  }\n\n  public getAnnouncement(): Observable<Announcement[]> {\n    return this.httpClient.get<Announcement[]>(`/api/get-announcements`).pipe(\n      tap(announcements => this.logger.info('Announcements retrieved!' + announcements)), share()\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T): any {\n    return (error: any): Observable<T> => {\n      this.logger.error(error);\n      this.logger.info(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n","/**\n * Głowny Interfejs Logger\n */\nexport abstract class LoggerService {\n\n  /**\n   * Logowanie komunikatu na poziomie ERROR\n   * @param msg treść komunikatu\n   */\n  abstract error(msg: string): void;\n\n  /**\n   * Logowanie komunikatu na poziomie INFO\n   * @param msg treść komunikatu\n   */\n  abstract info(msg: string): void;\n\n  /**\n   * Logowanie komunikatu na poziomie DEBUG\n   * @param msg treść komunikatu\n   */\n  abstract debug(msg: string): void;\n}\n\n/**\n * Implementacja funkcji Loggera, które nic nie robią\n */\nconst doesNothing = () => {};\n\n/**\n * Implementacja Loggera\n * Loguje wszystkie poziomy\n */\nexport class LoggerDebugService extends LoggerService {\n\n  debug(msg: string): void {\n    console.log(`[DEBUG] ${msg}`);\n  }\n\n  error(msg: string): void {\n    console.error(msg);\n  }\n\n  info(msg: string): void {\n    console.log(msg);\n  }\n}\n\n/**\n * Implementacja Loggera\n * Pomija logowanie wpisów DEBUG\n */\nexport class LoggerInfoService extends LoggerService {\n\n  debug = doesNothing;\n\n  error(msg: string): void {\n    console.error(msg);\n  }\n\n  info(msg: string): void {\n    console.log(msg);\n  }\n}\n\n/**\n * Implementacja Loggera\n * Pomija logowanie wpisów DEBUG i INFO\n */\nexport class LoggerErrorService extends LoggerService {\n\n  debug = doesNothing;\n  info = doesNothing;\n\n  error(msg: string): void {\n    console.error(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { User } from '../../../modules/users/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSharedService {\n  // zapamietuje dane w innych komponentach\n  private userSource = new BehaviorSubject<User>(null);\n  public userContent$ = this.userSource.asObservable();\n\n  constructor() {}\n\n  shareUser(user: User): void {\n    this.userSource.next(user);\n  }\n}\n","import { LoggerDebugService } from '../app/shared/shared-services/logger/logger.service';\nimport { AnnouncementService } from 'src/app/shared/shared-services/announcement/announcement.service';\nexport const environment = {\n  production: true\n};\nexport const envProdServiceLogger = LoggerDebugService;\nexport const envProdAnnouncementService = AnnouncementService;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport { LoggerDebugService } from '../app/shared/shared-services/logger/logger.service';\nimport { AnnouncementService } from '../app/shared/shared-services/announcement/announcement.service';\n\nexport const environment = {\n  production: false\n};\nexport const envServiceLogger = LoggerDebugService;\nexport const envAnnouncementService = AnnouncementService;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n/**\n * bootstrapper dla aplikacji klienckiej\n */\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}