import * as ɵngcc0 from '@angular/core';
var AgGridModule_1;
import { __decorate } from "tslib";
import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule } from '@angular/core';
import { AgGridAngular } from './ag-grid-angular.component';
import { AgGridColumn } from './ag-grid-column.component';
let AgGridModule = AgGridModule_1 = class AgGridModule {
    static withComponents(components) {
        return {
            ngModule: AgGridModule_1,
            providers: [
                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: components, multi: true }
            ],
        };
    }
    static forRoot(components) {
        return {
            ngModule: AgGridModule_1,
            providers: [
                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: components, multi: true }
            ],
        };
    }
};
AgGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AgGridModule });
AgGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AgGridModule_Factory(t) { return new (t || AgGridModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgGridModule, { declarations: function () { return [AgGridAngular, AgGridColumn]; }, exports: function () { return [AgGridAngular, AgGridColumn]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgGridModule, [{
        type: NgModule,
        args: [{
                declarations: [AgGridAngular, AgGridColumn],
                imports: [],
                exports: [AgGridAngular, AgGridColumn]
            }]
    }], null, null); })();
export { AgGridModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWctZ3JpZC1hbmd1bGFyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0BhZy1ncmlkLWNvbW11bml0eS9hbmd1bGFyL2xpYi9hZy1ncmlkLWFuZ3VsYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLE9BQU8sRUFBQyw0QkFBNEIsRUFBdUIsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFPeEQsSUFBYSxZQUFZLG9CQUF6QixNQUFhLFlBQVk7QUFDekIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFVBQWdCO0FBQUksUUFDdEMsT0FBTztBQUNmLFlBQVksUUFBUSxFQUFFLGNBQVk7QUFDbEMsWUFBWSxTQUFTLEVBQUU7QUFDdkIsZ0JBQWdCLEVBQUMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQztBQUMxRixhQUFhO0FBQ2IsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsSUFDSSxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQWdCO0FBQUksUUFDL0IsT0FBTztBQUNmLFlBQVksUUFBUSxFQUFFLGNBQVk7QUFDbEMsWUFBWSxTQUFTLEVBQUU7QUFDdkIsZ0JBQWdCLEVBQUMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQztBQUMxRixhQUFhO0FBQ2IsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsQ0FDQyxDQUFBO0FBbkJZLFlBQVkscUNBTHhCLFFBQVEsQ0FBQyxVQUNOO1dBQVksRUFBRSxDQUFDLGFBQWEsRUFBRSxZQUFZLENBQUMsVUFDM0MsT0FBTyxFQUFFLEVBQUUsVUFDWCxPQUFPLEVBQUUsQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDLE1BQ3pDLENBQUMsSUFDVyxZQUFZLENBbUJ4Qjs7Ozs7Ozs7OzBCQUNEO0FBQUMsU0FwQlksWUFBWTtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QU5BTFlaRV9GT1JfRU5UUllfQ09NUE9ORU5UUywgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge0FnR3JpZEFuZ3VsYXJ9IGZyb20gJy4vYWctZ3JpZC1hbmd1bGFyLmNvbXBvbmVudCc7XG5pbXBvcnQge0FnR3JpZENvbHVtbn0gZnJvbSAnLi9hZy1ncmlkLWNvbHVtbi5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW0FnR3JpZEFuZ3VsYXIsIEFnR3JpZENvbHVtbl0sXG4gICAgaW1wb3J0czogW10sXG4gICAgZXhwb3J0czogW0FnR3JpZEFuZ3VsYXIsIEFnR3JpZENvbHVtbl1cbn0pXG5leHBvcnQgY2xhc3MgQWdHcmlkTW9kdWxlIHtcbiAgICBzdGF0aWMgd2l0aENvbXBvbmVudHMoY29tcG9uZW50cz86IGFueSk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IEFnR3JpZE1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIHtwcm92aWRlOiBBTkFMWVpFX0ZPUl9FTlRSWV9DT01QT05FTlRTLCB1c2VWYWx1ZTogY29tcG9uZW50cywgbXVsdGk6IHRydWV9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHN0YXRpYyBmb3JSb290KGNvbXBvbmVudHM/OiBhbnkpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBBZ0dyaWRNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7cHJvdmlkZTogQU5BTFlaRV9GT1JfRU5UUllfQ09NUE9ORU5UUywgdXNlVmFsdWU6IGNvbXBvbmVudHMsIG11bHRpOiB0cnVlfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgfTtcbiAgICB9XG5cbn1cbiJdfQ==