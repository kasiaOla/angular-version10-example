import { __decorate, __metadata } from "tslib";
import { AfterViewInit, Component, ComponentFactoryResolver, ContentChildren, ElementRef, EventEmitter, Input, Output, QueryList, ViewContainerRef, ViewEncapsulation } from "@angular/core";
import { ComponentUtil, Events, Grid, GridOptionsWrapper, Promise, _ } from "ag-grid-community";
import { AngularFrameworkOverrides } from "./angularFrameworkOverrides";
import { AngularFrameworkComponentWrapper } from "./angularFrameworkComponentWrapper";
import { AgGridColumn } from "./ag-grid-column.component";
import * as Éµngcc0 from '@angular/core';
let AgGridAngular = class AgGridAngular {
    constructor(elementDef, viewContainerRef, angularFrameworkOverrides, frameworkComponentWrapper, _componentFactoryResolver) {
        this.viewContainerRef = viewContainerRef;
        this.angularFrameworkOverrides = angularFrameworkOverrides;
        this.frameworkComponentWrapper = frameworkComponentWrapper;
        this._componentFactoryResolver = _componentFactoryResolver;
        this._initialised = false;
        this._destroyed = false;
        // in order to ensure firing of gridReady is deterministic
        this._fullyReady = Promise.resolve(true);
        // @START@
        this.slaveGrids = undefined;
        this.alignedGrids = undefined;
        this.rowData = undefined;
        this.columnDefs = undefined;
        this.excelStyles = undefined;
        this.pinnedTopRowData = undefined;
        this.pinnedBottomRowData = undefined;
        this.components = undefined;
        this.frameworkComponents = undefined;
        this.rowStyle = undefined;
        this.context = undefined;
        this.autoGroupColumnDef = undefined;
        this.groupColumnDef = undefined;
        this.localeText = undefined;
        this.icons = undefined;
        this.datasource = undefined;
        this.serverSideDatasource = undefined;
        this.viewportDatasource = undefined;
        this.groupRowRendererParams = undefined;
        this.aggFuncs = undefined;
        this.fullWidthCellRendererParams = undefined;
        this.defaultColGroupDef = undefined;
        this.defaultColDef = undefined;
        this.defaultExportParams = undefined;
        this.columnTypes = undefined;
        this.rowClassRules = undefined;
        this.detailGridOptions = undefined;
        this.detailCellRendererParams = undefined;
        this.loadingCellRendererParams = undefined;
        this.loadingOverlayComponentParams = undefined;
        this.noRowsOverlayComponentParams = undefined;
        this.popupParent = undefined;
        this.colResizeDefault = undefined;
        this.reduxStore = undefined;
        this.statusBar = undefined;
        this.sideBar = undefined;
        this.sortingOrder = undefined;
        this.rowClass = undefined;
        this.rowSelection = undefined;
        this.overlayLoadingTemplate = undefined;
        this.overlayNoRowsTemplate = undefined;
        this.quickFilterText = undefined;
        this.rowModelType = undefined;
        this.editType = undefined;
        this.domLayout = undefined;
        this.clipboardDeliminator = undefined;
        this.rowGroupPanelShow = undefined;
        this.multiSortKey = undefined;
        this.pivotColumnGroupTotals = undefined;
        this.pivotRowTotals = undefined;
        this.pivotPanelShow = undefined;
        this.rowHeight = undefined;
        this.detailRowHeight = undefined;
        this.rowBuffer = undefined;
        this.colWidth = undefined;
        this.headerHeight = undefined;
        this.groupHeaderHeight = undefined;
        this.floatingFiltersHeight = undefined;
        this.pivotHeaderHeight = undefined;
        this.pivotGroupHeaderHeight = undefined;
        this.groupDefaultExpanded = undefined;
        this.minColWidth = undefined;
        this.maxColWidth = undefined;
        this.viewportRowModelPageSize = undefined;
        this.viewportRowModelBufferSize = undefined;
        this.autoSizePadding = undefined;
        this.maxBlocksInCache = undefined;
        this.maxConcurrentDatasourceRequests = undefined;
        this.tooltipShowDelay = undefined;
        this.cacheOverflowSize = undefined;
        this.paginationPageSize = undefined;
        this.cacheBlockSize = undefined;
        this.infiniteInitialRowCount = undefined;
        this.scrollbarWidth = undefined;
        this.paginationStartPage = undefined;
        this.infiniteBlockSize = undefined;
        this.batchUpdateWaitMillis = undefined;
        this.asyncTransactionWaitMillis = undefined;
        this.blockLoadDebounceMillis = undefined;
        this.keepDetailRowsCount = undefined;
        this.undoRedoCellEditingLimit = undefined;
        this.cellFlashDelay = undefined;
        this.cellFadeDelay = undefined;
        this.localeTextFunc = undefined;
        this.groupRowInnerRenderer = undefined;
        this.groupRowInnerRendererFramework = undefined;
        this.dateComponent = undefined;
        this.dateComponentFramework = undefined;
        this.groupRowRenderer = undefined;
        this.groupRowRendererFramework = undefined;
        this.isExternalFilterPresent = undefined;
        this.getRowHeight = undefined;
        this.doesExternalFilterPass = undefined;
        this.getRowClass = undefined;
        this.getRowStyle = undefined;
        this.getRowClassRules = undefined;
        this.traverseNode = undefined;
        this.getContextMenuItems = undefined;
        this.getMainMenuItems = undefined;
        this.processRowPostCreate = undefined;
        this.processCellForClipboard = undefined;
        this.getNodeChildDetails = undefined;
        this.groupRowAggNodes = undefined;
        this.getRowNodeId = undefined;
        this.isFullWidthCell = undefined;
        this.fullWidthCellRenderer = undefined;
        this.fullWidthCellRendererFramework = undefined;
        this.doesDataFlower = undefined;
        this.processSecondaryColDef = undefined;
        this.processSecondaryColGroupDef = undefined;
        this.getBusinessKeyForNode = undefined;
        this.sendToClipboard = undefined;
        this.navigateToNextCell = undefined;
        this.tabToNextCell = undefined;
        this.getDetailRowData = undefined;
        this.processCellFromClipboard = undefined;
        this.getDocument = undefined;
        this.postProcessPopup = undefined;
        this.getChildCount = undefined;
        this.getDataPath = undefined;
        this.loadingCellRenderer = undefined;
        this.loadingCellRendererFramework = undefined;
        this.loadingOverlayComponent = undefined;
        this.loadingOverlayComponentFramework = undefined;
        this.noRowsOverlayComponent = undefined;
        this.noRowsOverlayComponentFramework = undefined;
        this.detailCellRenderer = undefined;
        this.detailCellRendererFramework = undefined;
        this.defaultGroupSortComparator = undefined;
        this.isRowMaster = undefined;
        this.isRowSelectable = undefined;
        this.postSort = undefined;
        this.processHeaderForClipboard = undefined;
        this.paginationNumberFormatter = undefined;
        this.processDataFromClipboard = undefined;
        this.getServerSideGroupKey = undefined;
        this.isServerSideGroup = undefined;
        this.suppressKeyboardEvent = undefined;
        this.createChartContainer = undefined;
        this.processChartOptions = undefined;
        this.getChartToolbarItems = undefined;
        this.fillOperation = undefined;
        this.toolPanelSuppressRowGroups = undefined;
        this.toolPanelSuppressValues = undefined;
        this.toolPanelSuppressPivots = undefined;
        this.toolPanelSuppressPivotMode = undefined;
        this.toolPanelSuppressSideButtons = undefined;
        this.toolPanelSuppressColumnFilter = undefined;
        this.toolPanelSuppressColumnSelectAll = undefined;
        this.toolPanelSuppressColumnExpandAll = undefined;
        this.suppressMakeColumnVisibleAfterUnGroup = undefined;
        this.suppressRowClickSelection = undefined;
        this.suppressCellSelection = undefined;
        this.suppressHorizontalScroll = undefined;
        this.alwaysShowVerticalScroll = undefined;
        this.debug = undefined;
        this.enableBrowserTooltips = undefined;
        this.enableColResize = undefined;
        this.enableCellExpressions = undefined;
        this.enableSorting = undefined;
        this.enableServerSideSorting = undefined;
        this.enableFilter = undefined;
        this.enableServerSideFilter = undefined;
        this.angularCompileRows = undefined;
        this.angularCompileFilters = undefined;
        this.angularCompileHeaders = undefined;
        this.groupSuppressAutoColumn = undefined;
        this.groupSelectsChildren = undefined;
        this.groupIncludeFooter = undefined;
        this.groupIncludeTotalFooter = undefined;
        this.groupUseEntireRow = undefined;
        this.groupSuppressRow = undefined;
        this.groupSuppressBlankHeader = undefined;
        this.forPrint = undefined;
        this.suppressMenuHide = undefined;
        this.rowDeselection = undefined;
        this.unSortIcon = undefined;
        this.suppressMultiSort = undefined;
        this.singleClickEdit = undefined;
        this.suppressLoadingOverlay = undefined;
        this.suppressNoRowsOverlay = undefined;
        this.suppressAutoSize = undefined;
        this.skipHeaderOnAutoSize = undefined;
        this.suppressParentsInRowNodes = undefined;
        this.showToolPanel = undefined;
        this.suppressColumnMoveAnimation = undefined;
        this.suppressMovableColumns = undefined;
        this.suppressFieldDotNotation = undefined;
        this.enableRangeSelection = undefined;
        this.enableRangeHandle = undefined;
        this.enableFillHandle = undefined;
        this.suppressClearOnFillReduction = undefined;
        this.deltaSort = undefined;
        this.suppressTouch = undefined;
        this.suppressAsyncEvents = undefined;
        this.allowContextMenuWithControlKey = undefined;
        this.suppressContextMenu = undefined;
        this.suppressMenuFilterPanel = undefined;
        this.suppressMenuMainPanel = undefined;
        this.suppressMenuColumnPanel = undefined;
        this.rememberGroupStateWhenNewData = undefined;
        this.enableCellChangeFlash = undefined;
        this.suppressDragLeaveHidesColumns = undefined;
        this.suppressMiddleClickScrolls = undefined;
        this.suppressPreventDefaultOnMouseWheel = undefined;
        this.suppressUseColIdForGroups = undefined;
        this.suppressCopyRowsToClipboard = undefined;
        this.copyHeadersToClipboard = undefined;
        this.pivotMode = undefined;
        this.suppressAggFuncInHeader = undefined;
        this.suppressColumnVirtualisation = undefined;
        this.suppressAggAtRootLevel = undefined;
        this.suppressFocusAfterRefresh = undefined;
        this.functionsPassive = undefined;
        this.functionsReadOnly = undefined;
        this.animateRows = undefined;
        this.groupSelectsFiltered = undefined;
        this.groupRemoveSingleChildren = undefined;
        this.groupRemoveLowestSingleChildren = undefined;
        this.enableRtl = undefined;
        this.suppressClickEdit = undefined;
        this.rowDragManaged = undefined;
        this.suppressRowDrag = undefined;
        this.suppressMoveWhenRowDragging = undefined;
        this.enableMultiRowDragging = undefined;
        this.enableGroupEdit = undefined;
        this.embedFullWidthRows = undefined;
        this.deprecatedEmbedFullWidthRows = undefined;
        this.suppressTabbing = undefined;
        this.suppressPaginationPanel = undefined;
        this.floatingFilter = undefined;
        this.groupHideOpenParents = undefined;
        this.groupMultiAutoColumn = undefined;
        this.pagination = undefined;
        this.stopEditingWhenGridLosesFocus = undefined;
        this.paginationAutoPageSize = undefined;
        this.suppressScrollOnNewData = undefined;
        this.purgeClosedRowNodes = undefined;
        this.cacheQuickFilter = undefined;
        this.deltaRowDataMode = undefined;
        this.ensureDomOrder = undefined;
        this.accentedSort = undefined;
        this.pivotTotals = undefined;
        this.suppressChangeDetection = undefined;
        this.valueCache = undefined;
        this.valueCacheNeverExpires = undefined;
        this.aggregateOnlyChangedColumns = undefined;
        this.suppressAnimationFrame = undefined;
        this.suppressExcelExport = undefined;
        this.suppressCsvExport = undefined;
        this.treeData = undefined;
        this.masterDetail = undefined;
        this.suppressMultiRangeSelection = undefined;
        this.enterMovesDownAfterEdit = undefined;
        this.enterMovesDown = undefined;
        this.suppressPropertyNamesCheck = undefined;
        this.rowMultiSelectWithClick = undefined;
        this.contractColumnSelection = undefined;
        this.suppressEnterpriseResetOnNewColumns = undefined;
        this.enableOldSetFilterModel = undefined;
        this.suppressRowHoverHighlight = undefined;
        this.gridAutoHeight = undefined;
        this.suppressRowTransform = undefined;
        this.suppressClipboardPaste = undefined;
        this.suppressLastEmptyLineOnPaste = undefined;
        this.serverSideSortingAlwaysResets = undefined;
        this.reactNext = undefined;
        this.suppressSetColumnStateEvents = undefined;
        this.enableCharts = undefined;
        this.deltaColumnMode = undefined;
        this.suppressMaintainUnsortedOrder = undefined;
        this.enableCellTextSelection = undefined;
        this.suppressBrowserResizeObserver = undefined;
        this.suppressMaxRenderedRowRestriction = undefined;
        this.excludeChildrenWhenTreeDataFiltering = undefined;
        this.tooltipMouseTrack = undefined;
        this.keepDetailRows = undefined;
        this.paginateChildRows = undefined;
        this.preventDefaultOnContextMenu = undefined;
        this.undoRedoCellEditing = undefined;
        this.allowDragFromColumnsToolPanel = undefined;
        this.immutableData = undefined;
        this.immutableColumns = undefined;
        this.pivotSuppressAutoColumn = undefined;
        this.columnEverythingChanged = new EventEmitter();
        this.newColumnsLoaded = new EventEmitter();
        this.columnPivotModeChanged = new EventEmitter();
        this.columnRowGroupChanged = new EventEmitter();
        this.expandOrCollapseAll = new EventEmitter();
        this.columnPivotChanged = new EventEmitter();
        this.gridColumnsChanged = new EventEmitter();
        this.columnValueChanged = new EventEmitter();
        this.columnMoved = new EventEmitter();
        this.columnVisible = new EventEmitter();
        this.columnPinned = new EventEmitter();
        this.columnGroupOpened = new EventEmitter();
        this.columnResized = new EventEmitter();
        this.displayedColumnsChanged = new EventEmitter();
        this.virtualColumnsChanged = new EventEmitter();
        this.rowGroupOpened = new EventEmitter();
        this.rowDataChanged = new EventEmitter();
        this.rowDataUpdated = new EventEmitter();
        this.pinnedRowDataChanged = new EventEmitter();
        this.rangeSelectionChanged = new EventEmitter();
        this.chartCreated = new EventEmitter();
        this.chartRangeSelectionChanged = new EventEmitter();
        this.chartOptionsChanged = new EventEmitter();
        this.chartDestroyed = new EventEmitter();
        this.toolPanelVisibleChanged = new EventEmitter();
        this.modelUpdated = new EventEmitter();
        this.pasteStart = new EventEmitter();
        this.pasteEnd = new EventEmitter();
        this.fillStart = new EventEmitter();
        this.fillEnd = new EventEmitter();
        this.cellClicked = new EventEmitter();
        this.cellDoubleClicked = new EventEmitter();
        this.cellMouseDown = new EventEmitter();
        this.cellContextMenu = new EventEmitter();
        this.cellValueChanged = new EventEmitter();
        this.rowValueChanged = new EventEmitter();
        this.cellFocused = new EventEmitter();
        this.rowSelected = new EventEmitter();
        this.selectionChanged = new EventEmitter();
        this.cellKeyDown = new EventEmitter();
        this.cellKeyPress = new EventEmitter();
        this.cellMouseOver = new EventEmitter();
        this.cellMouseOut = new EventEmitter();
        this.filterChanged = new EventEmitter();
        this.filterModified = new EventEmitter();
        this.filterOpened = new EventEmitter();
        this.sortChanged = new EventEmitter();
        this.virtualRowRemoved = new EventEmitter();
        this.rowClicked = new EventEmitter();
        this.rowDoubleClicked = new EventEmitter();
        this.gridReady = new EventEmitter();
        this.gridSizeChanged = new EventEmitter();
        this.viewportChanged = new EventEmitter();
        this.firstDataRendered = new EventEmitter();
        this.dragStarted = new EventEmitter();
        this.dragStopped = new EventEmitter();
        this.checkboxChanged = new EventEmitter();
        this.rowEditingStarted = new EventEmitter();
        this.rowEditingStopped = new EventEmitter();
        this.cellEditingStarted = new EventEmitter();
        this.cellEditingStopped = new EventEmitter();
        this.bodyScroll = new EventEmitter();
        this.animationQueueEmpty = new EventEmitter();
        this.heightScaleChanged = new EventEmitter();
        this.paginationChanged = new EventEmitter();
        this.componentStateChanged = new EventEmitter();
        this.bodyHeightChanged = new EventEmitter();
        this.displayedColumnsWidthChanged = new EventEmitter();
        this.scrollVisibilityChanged = new EventEmitter();
        this.columnHoverChanged = new EventEmitter();
        this.flashCells = new EventEmitter();
        this.rowDragEnter = new EventEmitter();
        this.rowDragMove = new EventEmitter();
        this.rowDragLeave = new EventEmitter();
        this.rowDragEnd = new EventEmitter();
        this.popupToFront = new EventEmitter();
        this.columnRowGroupChangeRequest = new EventEmitter();
        this.columnPivotChangeRequest = new EventEmitter();
        this.columnValueChangeRequest = new EventEmitter();
        this.columnAggFuncChangeRequest = new EventEmitter();
        this.keyboardFocus = new EventEmitter();
        this.mouseFocus = new EventEmitter();
        this._nativeElement = elementDef.nativeElement;
        this.frameworkComponentWrapper.setViewContainerRef(this.viewContainerRef);
        this.frameworkComponentWrapper.setComponentFactoryResolver(this._componentFactoryResolver);
    }
    ngAfterViewInit() {
        this.checkForDeprecatedEvents();
        this.gridOptions = ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this, true);
        this.gridParams = {
            globalEventListener: this.globalEventListener.bind(this),
            frameworkOverrides: this.angularFrameworkOverrides,
            providedBeanInstances: {
                frameworkComponentWrapper: this.frameworkComponentWrapper
            },
            modules: (this.modules || [])
        };
        if (this.columns && this.columns.length > 0) {
            this.gridOptions.columnDefs = this.columns
                .map((column) => {
                return column.toColDef();
            });
        }
        new Grid(this._nativeElement, this.gridOptions, this.gridParams);
        if (this.gridOptions.api) {
            this.api = this.gridOptions.api;
        }
        if (this.gridOptions.columnApi) {
            this.columnApi = this.gridOptions.columnApi;
        }
        this._initialised = true;
        // sometimes, especially in large client apps gridReady can fire before ngAfterViewInit
        // this ties these together so that gridReady will always fire after agGridAngular's ngAfterViewInit
        // the actual containing component's ngAfterViewInit will fire just after agGridAngular's
        this._fullyReady.resolveNow(null, resolve => resolve);
    }
    ngOnChanges(changes) {
        if (this._initialised) {
            ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);
        }
    }
    ngOnDestroy() {
        if (this._initialised) {
            // need to do this before the destroy, so we know not to emit any events
            // while tearing down the grid.
            this._destroyed = true;
            if (this.api) {
                this.api.destroy();
            }
        }
    }
    checkForDeprecatedEvents() {
        _.iterateObject(Events, (key, eventName) => {
            if (this[eventName] && this[eventName].observers.length > 0) {
                GridOptionsWrapper.checkEventDeprecation(eventName);
            }
        });
    }
    globalEventListener(eventType, event) {
        // if we are tearing down, don't emit angular events, as this causes
        // problems with the angular router
        if (this._destroyed) {
            return;
        }
        // generically look up the eventType
        let emitter = this[eventType];
        if (emitter) {
            if (eventType === 'gridReady') {
                // if the user is listening for gridReady, wait for ngAfterViewInit to fire first, then emit the
                // gridReady event
                this._fullyReady.then((result => {
                    emitter.emit(event);
                }));
            }
            else {
                emitter.emit(event);
            }
        }
        else {
            console.log('ag-Grid-angular: could not find EventEmitter: ' + eventType);
        }
    }
};
AgGridAngular.Éµfac = function AgGridAngular_Factory(t) { return new (t || AgGridAngular)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ViewContainerRef), Éµngcc0.ÉµÉµdirectiveInject(AngularFrameworkOverrides), Éµngcc0.ÉµÉµdirectiveInject(AngularFrameworkComponentWrapper), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ComponentFactoryResolver)); };
AgGridAngular.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: AgGridAngular, selectors: [["ag-grid-angular"]], contentQueries: function AgGridAngular_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        Éµngcc0.ÉµÉµcontentQuery(dirIndex, AgGridColumn, false);
    } if (rf & 2) {
        var _t;
        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.columns = _t);
    } }, inputs: { slaveGrids: "slaveGrids", alignedGrids: "alignedGrids", rowData: "rowData", columnDefs: "columnDefs", excelStyles: "excelStyles", pinnedTopRowData: "pinnedTopRowData", pinnedBottomRowData: "pinnedBottomRowData", components: "components", frameworkComponents: "frameworkComponents", rowStyle: "rowStyle", context: "context", autoGroupColumnDef: "autoGroupColumnDef", groupColumnDef: "groupColumnDef", localeText: "localeText", icons: "icons", datasource: "datasource", serverSideDatasource: "serverSideDatasource", viewportDatasource: "viewportDatasource", groupRowRendererParams: "groupRowRendererParams", aggFuncs: "aggFuncs", fullWidthCellRendererParams: "fullWidthCellRendererParams", defaultColGroupDef: "defaultColGroupDef", defaultColDef: "defaultColDef", defaultExportParams: "defaultExportParams", columnTypes: "columnTypes", rowClassRules: "rowClassRules", detailGridOptions: "detailGridOptions", detailCellRendererParams: "detailCellRendererParams", loadingCellRendererParams: "loadingCellRendererParams", loadingOverlayComponentParams: "loadingOverlayComponentParams", noRowsOverlayComponentParams: "noRowsOverlayComponentParams", popupParent: "popupParent", colResizeDefault: "colResizeDefault", reduxStore: "reduxStore", statusBar: "statusBar", sideBar: "sideBar", sortingOrder: "sortingOrder", rowClass: "rowClass", rowSelection: "rowSelection", overlayLoadingTemplate: "overlayLoadingTemplate", overlayNoRowsTemplate: "overlayNoRowsTemplate", quickFilterText: "quickFilterText", rowModelType: "rowModelType", editType: "editType", domLayout: "domLayout", clipboardDeliminator: "clipboardDeliminator", rowGroupPanelShow: "rowGroupPanelShow", multiSortKey: "multiSortKey", pivotColumnGroupTotals: "pivotColumnGroupTotals", pivotRowTotals: "pivotRowTotals", pivotPanelShow: "pivotPanelShow", rowHeight: "rowHeight", detailRowHeight: "detailRowHeight", rowBuffer: "rowBuffer", colWidth: "colWidth", headerHeight: "headerHeight", groupHeaderHeight: "groupHeaderHeight", floatingFiltersHeight: "floatingFiltersHeight", pivotHeaderHeight: "pivotHeaderHeight", pivotGroupHeaderHeight: "pivotGroupHeaderHeight", groupDefaultExpanded: "groupDefaultExpanded", minColWidth: "minColWidth", maxColWidth: "maxColWidth", viewportRowModelPageSize: "viewportRowModelPageSize", viewportRowModelBufferSize: "viewportRowModelBufferSize", autoSizePadding: "autoSizePadding", maxBlocksInCache: "maxBlocksInCache", maxConcurrentDatasourceRequests: "maxConcurrentDatasourceRequests", tooltipShowDelay: "tooltipShowDelay", cacheOverflowSize: "cacheOverflowSize", paginationPageSize: "paginationPageSize", cacheBlockSize: "cacheBlockSize", infiniteInitialRowCount: "infiniteInitialRowCount", scrollbarWidth: "scrollbarWidth", paginationStartPage: "paginationStartPage", infiniteBlockSize: "infiniteBlockSize", batchUpdateWaitMillis: "batchUpdateWaitMillis", asyncTransactionWaitMillis: "asyncTransactionWaitMillis", blockLoadDebounceMillis: "blockLoadDebounceMillis", keepDetailRowsCount: "keepDetailRowsCount", undoRedoCellEditingLimit: "undoRedoCellEditingLimit", cellFlashDelay: "cellFlashDelay", cellFadeDelay: "cellFadeDelay", localeTextFunc: "localeTextFunc", groupRowInnerRenderer: "groupRowInnerRenderer", groupRowInnerRendererFramework: "groupRowInnerRendererFramework", dateComponent: "dateComponent", dateComponentFramework: "dateComponentFramework", groupRowRenderer: "groupRowRenderer", groupRowRendererFramework: "groupRowRendererFramework", isExternalFilterPresent: "isExternalFilterPresent", getRowHeight: "getRowHeight", doesExternalFilterPass: "doesExternalFilterPass", getRowClass: "getRowClass", getRowStyle: "getRowStyle", getRowClassRules: "getRowClassRules", traverseNode: "traverseNode", getContextMenuItems: "getContextMenuItems", getMainMenuItems: "getMainMenuItems", processRowPostCreate: "processRowPostCreate", processCellForClipboard: "processCellForClipboard", getNodeChildDetails: "getNodeChildDetails", groupRowAggNodes: "groupRowAggNodes", getRowNodeId: "getRowNodeId", isFullWidthCell: "isFullWidthCell", fullWidthCellRenderer: "fullWidthCellRenderer", fullWidthCellRendererFramework: "fullWidthCellRendererFramework", doesDataFlower: "doesDataFlower", processSecondaryColDef: "processSecondaryColDef", processSecondaryColGroupDef: "processSecondaryColGroupDef", getBusinessKeyForNode: "getBusinessKeyForNode", sendToClipboard: "sendToClipboard", navigateToNextCell: "navigateToNextCell", tabToNextCell: "tabToNextCell", getDetailRowData: "getDetailRowData", processCellFromClipboard: "processCellFromClipboard", getDocument: "getDocument", postProcessPopup: "postProcessPopup", getChildCount: "getChildCount", getDataPath: "getDataPath", loadingCellRenderer: "loadingCellRenderer", loadingCellRendererFramework: "loadingCellRendererFramework", loadingOverlayComponent: "loadingOverlayComponent", loadingOverlayComponentFramework: "loadingOverlayComponentFramework", noRowsOverlayComponent: "noRowsOverlayComponent", noRowsOverlayComponentFramework: "noRowsOverlayComponentFramework", detailCellRenderer: "detailCellRenderer", detailCellRendererFramework: "detailCellRendererFramework", defaultGroupSortComparator: "defaultGroupSortComparator", isRowMaster: "isRowMaster", isRowSelectable: "isRowSelectable", postSort: "postSort", processHeaderForClipboard: "processHeaderForClipboard", paginationNumberFormatter: "paginationNumberFormatter", processDataFromClipboard: "processDataFromClipboard", getServerSideGroupKey: "getServerSideGroupKey", isServerSideGroup: "isServerSideGroup", suppressKeyboardEvent: "suppressKeyboardEvent", createChartContainer: "createChartContainer", processChartOptions: "processChartOptions", getChartToolbarItems: "getChartToolbarItems", fillOperation: "fillOperation", toolPanelSuppressRowGroups: "toolPanelSuppressRowGroups", toolPanelSuppressValues: "toolPanelSuppressValues", toolPanelSuppressPivots: "toolPanelSuppressPivots", toolPanelSuppressPivotMode: "toolPanelSuppressPivotMode", toolPanelSuppressSideButtons: "toolPanelSuppressSideButtons", toolPanelSuppressColumnFilter: "toolPanelSuppressColumnFilter", toolPanelSuppressColumnSelectAll: "toolPanelSuppressColumnSelectAll", toolPanelSuppressColumnExpandAll: "toolPanelSuppressColumnExpandAll", suppressMakeColumnVisibleAfterUnGroup: "suppressMakeColumnVisibleAfterUnGroup", suppressRowClickSelection: "suppressRowClickSelection", suppressCellSelection: "suppressCellSelection", suppressHorizontalScroll: "suppressHorizontalScroll", alwaysShowVerticalScroll: "alwaysShowVerticalScroll", debug: "debug", enableBrowserTooltips: "enableBrowserTooltips", enableColResize: "enableColResize", enableCellExpressions: "enableCellExpressions", enableSorting: "enableSorting", enableServerSideSorting: "enableServerSideSorting", enableFilter: "enableFilter", enableServerSideFilter: "enableServerSideFilter", angularCompileRows: "angularCompileRows", angularCompileFilters: "angularCompileFilters", angularCompileHeaders: "angularCompileHeaders", groupSuppressAutoColumn: "groupSuppressAutoColumn", groupSelectsChildren: "groupSelectsChildren", groupIncludeFooter: "groupIncludeFooter", groupIncludeTotalFooter: "groupIncludeTotalFooter", groupUseEntireRow: "groupUseEntireRow", groupSuppressRow: "groupSuppressRow", groupSuppressBlankHeader: "groupSuppressBlankHeader", forPrint: "forPrint", suppressMenuHide: "suppressMenuHide", rowDeselection: "rowDeselection", unSortIcon: "unSortIcon", suppressMultiSort: "suppressMultiSort", singleClickEdit: "singleClickEdit", suppressLoadingOverlay: "suppressLoadingOverlay", suppressNoRowsOverlay: "suppressNoRowsOverlay", suppressAutoSize: "suppressAutoSize", skipHeaderOnAutoSize: "skipHeaderOnAutoSize", suppressParentsInRowNodes: "suppressParentsInRowNodes", showToolPanel: "showToolPanel", suppressColumnMoveAnimation: "suppressColumnMoveAnimation", suppressMovableColumns: "suppressMovableColumns", suppressFieldDotNotation: "suppressFieldDotNotation", enableRangeSelection: "enableRangeSelection", enableRangeHandle: "enableRangeHandle", enableFillHandle: "enableFillHandle", suppressClearOnFillReduction: "suppressClearOnFillReduction", deltaSort: "deltaSort", suppressTouch: "suppressTouch", suppressAsyncEvents: "suppressAsyncEvents", allowContextMenuWithControlKey: "allowContextMenuWithControlKey", suppressContextMenu: "suppressContextMenu", suppressMenuFilterPanel: "suppressMenuFilterPanel", suppressMenuMainPanel: "suppressMenuMainPanel", suppressMenuColumnPanel: "suppressMenuColumnPanel", rememberGroupStateWhenNewData: "rememberGroupStateWhenNewData", enableCellChangeFlash: "enableCellChangeFlash", suppressDragLeaveHidesColumns: "suppressDragLeaveHidesColumns", suppressMiddleClickScrolls: "suppressMiddleClickScrolls", suppressPreventDefaultOnMouseWheel: "suppressPreventDefaultOnMouseWheel", suppressUseColIdForGroups: "suppressUseColIdForGroups", suppressCopyRowsToClipboard: "suppressCopyRowsToClipboard", copyHeadersToClipboard: "copyHeadersToClipboard", pivotMode: "pivotMode", suppressAggFuncInHeader: "suppressAggFuncInHeader", suppressColumnVirtualisation: "suppressColumnVirtualisation", suppressAggAtRootLevel: "suppressAggAtRootLevel", suppressFocusAfterRefresh: "suppressFocusAfterRefresh", functionsPassive: "functionsPassive", functionsReadOnly: "functionsReadOnly", animateRows: "animateRows", groupSelectsFiltered: "groupSelectsFiltered", groupRemoveSingleChildren: "groupRemoveSingleChildren", groupRemoveLowestSingleChildren: "groupRemoveLowestSingleChildren", enableRtl: "enableRtl", suppressClickEdit: "suppressClickEdit", rowDragManaged: "rowDragManaged", suppressRowDrag: "suppressRowDrag", suppressMoveWhenRowDragging: "suppressMoveWhenRowDragging", enableMultiRowDragging: "enableMultiRowDragging", enableGroupEdit: "enableGroupEdit", embedFullWidthRows: "embedFullWidthRows", deprecatedEmbedFullWidthRows: "deprecatedEmbedFullWidthRows", suppressTabbing: "suppressTabbing", suppressPaginationPanel: "suppressPaginationPanel", floatingFilter: "floatingFilter", groupHideOpenParents: "groupHideOpenParents", groupMultiAutoColumn: "groupMultiAutoColumn", pagination: "pagination", stopEditingWhenGridLosesFocus: "stopEditingWhenGridLosesFocus", paginationAutoPageSize: "paginationAutoPageSize", suppressScrollOnNewData: "suppressScrollOnNewData", purgeClosedRowNodes: "purgeClosedRowNodes", cacheQuickFilter: "cacheQuickFilter", deltaRowDataMode: "deltaRowDataMode", ensureDomOrder: "ensureDomOrder", accentedSort: "accentedSort", pivotTotals: "pivotTotals", suppressChangeDetection: "suppressChangeDetection", valueCache: "valueCache", valueCacheNeverExpires: "valueCacheNeverExpires", aggregateOnlyChangedColumns: "aggregateOnlyChangedColumns", suppressAnimationFrame: "suppressAnimationFrame", suppressExcelExport: "suppressExcelExport", suppressCsvExport: "suppressCsvExport", treeData: "treeData", masterDetail: "masterDetail", suppressMultiRangeSelection: "suppressMultiRangeSelection", enterMovesDownAfterEdit: "enterMovesDownAfterEdit", enterMovesDown: "enterMovesDown", suppressPropertyNamesCheck: "suppressPropertyNamesCheck", rowMultiSelectWithClick: "rowMultiSelectWithClick", contractColumnSelection: "contractColumnSelection", suppressEnterpriseResetOnNewColumns: "suppressEnterpriseResetOnNewColumns", enableOldSetFilterModel: "enableOldSetFilterModel", suppressRowHoverHighlight: "suppressRowHoverHighlight", gridAutoHeight: "gridAutoHeight", suppressRowTransform: "suppressRowTransform", suppressClipboardPaste: "suppressClipboardPaste", suppressLastEmptyLineOnPaste: "suppressLastEmptyLineOnPaste", serverSideSortingAlwaysResets: "serverSideSortingAlwaysResets", reactNext: "reactNext", suppressSetColumnStateEvents: "suppressSetColumnStateEvents", enableCharts: "enableCharts", deltaColumnMode: "deltaColumnMode", suppressMaintainUnsortedOrder: "suppressMaintainUnsortedOrder", enableCellTextSelection: "enableCellTextSelection", suppressBrowserResizeObserver: "suppressBrowserResizeObserver", suppressMaxRenderedRowRestriction: "suppressMaxRenderedRowRestriction", excludeChildrenWhenTreeDataFiltering: "excludeChildrenWhenTreeDataFiltering", tooltipMouseTrack: "tooltipMouseTrack", keepDetailRows: "keepDetailRows", paginateChildRows: "paginateChildRows", preventDefaultOnContextMenu: "preventDefaultOnContextMenu", undoRedoCellEditing: "undoRedoCellEditing", allowDragFromColumnsToolPanel: "allowDragFromColumnsToolPanel", immutableData: "immutableData", immutableColumns: "immutableColumns", pivotSuppressAutoColumn: "pivotSuppressAutoColumn", gridOptions: "gridOptions", modules: "modules" }, outputs: { columnEverythingChanged: "columnEverythingChanged", newColumnsLoaded: "newColumnsLoaded", columnPivotModeChanged: "columnPivotModeChanged", columnRowGroupChanged: "columnRowGroupChanged", expandOrCollapseAll: "expandOrCollapseAll", columnPivotChanged: "columnPivotChanged", gridColumnsChanged: "gridColumnsChanged", columnValueChanged: "columnValueChanged", columnMoved: "columnMoved", columnVisible: "columnVisible", columnPinned: "columnPinned", columnGroupOpened: "columnGroupOpened", columnResized: "columnResized", displayedColumnsChanged: "displayedColumnsChanged", virtualColumnsChanged: "virtualColumnsChanged", rowGroupOpened: "rowGroupOpened", rowDataChanged: "rowDataChanged", rowDataUpdated: "rowDataUpdated", pinnedRowDataChanged: "pinnedRowDataChanged", rangeSelectionChanged: "rangeSelectionChanged", chartCreated: "chartCreated", chartRangeSelectionChanged: "chartRangeSelectionChanged", chartOptionsChanged: "chartOptionsChanged", chartDestroyed: "chartDestroyed", toolPanelVisibleChanged: "toolPanelVisibleChanged", modelUpdated: "modelUpdated", pasteStart: "pasteStart", pasteEnd: "pasteEnd", fillStart: "fillStart", fillEnd: "fillEnd", cellClicked: "cellClicked", cellDoubleClicked: "cellDoubleClicked", cellMouseDown: "cellMouseDown", cellContextMenu: "cellContextMenu", cellValueChanged: "cellValueChanged", rowValueChanged: "rowValueChanged", cellFocused: "cellFocused", rowSelected: "rowSelected", selectionChanged: "selectionChanged", cellKeyDown: "cellKeyDown", cellKeyPress: "cellKeyPress", cellMouseOver: "cellMouseOver", cellMouseOut: "cellMouseOut", filterChanged: "filterChanged", filterModified: "filterModified", filterOpened: "filterOpened", sortChanged: "sortChanged", virtualRowRemoved: "virtualRowRemoved", rowClicked: "rowClicked", rowDoubleClicked: "rowDoubleClicked", gridReady: "gridReady", gridSizeChanged: "gridSizeChanged", viewportChanged: "viewportChanged", firstDataRendered: "firstDataRendered", dragStarted: "dragStarted", dragStopped: "dragStopped", checkboxChanged: "checkboxChanged", rowEditingStarted: "rowEditingStarted", rowEditingStopped: "rowEditingStopped", cellEditingStarted: "cellEditingStarted", cellEditingStopped: "cellEditingStopped", bodyScroll: "bodyScroll", animationQueueEmpty: "animationQueueEmpty", heightScaleChanged: "heightScaleChanged", paginationChanged: "paginationChanged", componentStateChanged: "componentStateChanged", bodyHeightChanged: "bodyHeightChanged", displayedColumnsWidthChanged: "displayedColumnsWidthChanged", scrollVisibilityChanged: "scrollVisibilityChanged", columnHoverChanged: "columnHoverChanged", flashCells: "flashCells", rowDragEnter: "rowDragEnter", rowDragMove: "rowDragMove", rowDragLeave: "rowDragLeave", rowDragEnd: "rowDragEnd", popupToFront: "popupToFront", columnRowGroupChangeRequest: "columnRowGroupChangeRequest", columnPivotChangeRequest: "columnPivotChangeRequest", columnValueChangeRequest: "columnValueChangeRequest", columnAggFuncChangeRequest: "columnAggFuncChangeRequest", keyboardFocus: "keyboardFocus", mouseFocus: "mouseFocus" }, features: [Éµngcc0.ÉµÉµProvidersFeature([
            AngularFrameworkOverrides,
            AngularFrameworkComponentWrapper
        ]), Éµngcc0.ÉµÉµNgOnChangesFeature], decls: 0, vars: 0, template: function AgGridAngular_Template(rf, ctx) { }, encapsulation: 2 });
AgGridAngular.ctorParameters = () => [
    { type: ElementRef },
    { type: ViewContainerRef },
    { type: AngularFrameworkOverrides },
    { type: AngularFrameworkComponentWrapper },
    { type: ComponentFactoryResolver }
];
__decorate([
    ContentChildren(AgGridColumn),
    __metadata("design:type", QueryList)
], AgGridAngular.prototype, "columns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "gridOptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], AgGridAngular.prototype, "modules", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "slaveGrids", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "alignedGrids", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "columnDefs", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "excelStyles", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pinnedTopRowData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pinnedBottomRowData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "components", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "frameworkComponents", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowStyle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "context", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "autoGroupColumnDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupColumnDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "localeText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "icons", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "datasource", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "serverSideDatasource", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "viewportDatasource", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "aggFuncs", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "fullWidthCellRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "defaultColGroupDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "defaultColDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "defaultExportParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "columnTypes", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowClassRules", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "detailGridOptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "detailCellRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingCellRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingOverlayComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "noRowsOverlayComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "popupParent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "colResizeDefault", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "reduxStore", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "statusBar", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "sideBar", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "sortingOrder", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "overlayLoadingTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "overlayNoRowsTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "quickFilterText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowModelType", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "editType", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "domLayout", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "clipboardDeliminator", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowGroupPanelShow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "multiSortKey", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotColumnGroupTotals", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotRowTotals", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotPanelShow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "detailRowHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowBuffer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "colWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "headerHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupHeaderHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "floatingFiltersHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotHeaderHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotGroupHeaderHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupDefaultExpanded", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "minColWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "maxColWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "viewportRowModelPageSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "viewportRowModelBufferSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "autoSizePadding", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "maxBlocksInCache", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "maxConcurrentDatasourceRequests", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "tooltipShowDelay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "cacheOverflowSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "paginationPageSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "cacheBlockSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "infiniteInitialRowCount", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "scrollbarWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "paginationStartPage", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "infiniteBlockSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "batchUpdateWaitMillis", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "asyncTransactionWaitMillis", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "blockLoadDebounceMillis", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "keepDetailRowsCount", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "undoRedoCellEditingLimit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "cellFlashDelay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "cellFadeDelay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "localeTextFunc", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowInnerRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowInnerRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "dateComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "dateComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "isExternalFilterPresent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getRowHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "doesExternalFilterPass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getRowClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getRowStyle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getRowClassRules", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "traverseNode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getContextMenuItems", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getMainMenuItems", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processRowPostCreate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processCellForClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getNodeChildDetails", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRowAggNodes", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getRowNodeId", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "isFullWidthCell", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "fullWidthCellRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "fullWidthCellRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "doesDataFlower", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processSecondaryColDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processSecondaryColGroupDef", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getBusinessKeyForNode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "sendToClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "navigateToNextCell", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "tabToNextCell", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getDetailRowData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processCellFromClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getDocument", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "postProcessPopup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getChildCount", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getDataPath", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingCellRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingCellRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingOverlayComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "loadingOverlayComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "noRowsOverlayComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "noRowsOverlayComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "detailCellRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "detailCellRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "defaultGroupSortComparator", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "isRowMaster", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "isRowSelectable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "postSort", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processHeaderForClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "paginationNumberFormatter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processDataFromClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getServerSideGroupKey", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "isServerSideGroup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressKeyboardEvent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "createChartContainer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "processChartOptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "getChartToolbarItems", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "fillOperation", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressRowGroups", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressValues", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressPivots", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressPivotMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressSideButtons", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressColumnFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressColumnSelectAll", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "toolPanelSuppressColumnExpandAll", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMakeColumnVisibleAfterUnGroup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressRowClickSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressCellSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressHorizontalScroll", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "alwaysShowVerticalScroll", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "debug", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableBrowserTooltips", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableColResize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableCellExpressions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableSorting", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableServerSideSorting", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableServerSideFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "angularCompileRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "angularCompileFilters", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "angularCompileHeaders", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupSuppressAutoColumn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupSelectsChildren", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupIncludeFooter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupIncludeTotalFooter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupUseEntireRow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupSuppressRow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupSuppressBlankHeader", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "forPrint", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMenuHide", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowDeselection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "unSortIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMultiSort", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "singleClickEdit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressLoadingOverlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressNoRowsOverlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressAutoSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "skipHeaderOnAutoSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressParentsInRowNodes", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "showToolPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressColumnMoveAnimation", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMovableColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressFieldDotNotation", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableRangeSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableRangeHandle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableFillHandle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressClearOnFillReduction", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "deltaSort", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressTouch", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressAsyncEvents", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "allowContextMenuWithControlKey", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressContextMenu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMenuFilterPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMenuMainPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMenuColumnPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rememberGroupStateWhenNewData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableCellChangeFlash", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressDragLeaveHidesColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMiddleClickScrolls", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressPreventDefaultOnMouseWheel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressUseColIdForGroups", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressCopyRowsToClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "copyHeadersToClipboard", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressAggFuncInHeader", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressColumnVirtualisation", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressAggAtRootLevel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressFocusAfterRefresh", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "functionsPassive", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "functionsReadOnly", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "animateRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupSelectsFiltered", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRemoveSingleChildren", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupRemoveLowestSingleChildren", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableRtl", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressClickEdit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowDragManaged", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressRowDrag", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMoveWhenRowDragging", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableMultiRowDragging", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableGroupEdit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "embedFullWidthRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "deprecatedEmbedFullWidthRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressTabbing", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressPaginationPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "floatingFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupHideOpenParents", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "groupMultiAutoColumn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pagination", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "stopEditingWhenGridLosesFocus", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "paginationAutoPageSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressScrollOnNewData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "purgeClosedRowNodes", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "cacheQuickFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "deltaRowDataMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "ensureDomOrder", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "accentedSort", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotTotals", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressChangeDetection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "valueCache", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "valueCacheNeverExpires", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "aggregateOnlyChangedColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressAnimationFrame", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressExcelExport", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressCsvExport", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "treeData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "masterDetail", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMultiRangeSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enterMovesDownAfterEdit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enterMovesDown", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressPropertyNamesCheck", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "rowMultiSelectWithClick", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "contractColumnSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressEnterpriseResetOnNewColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableOldSetFilterModel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressRowHoverHighlight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "gridAutoHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressRowTransform", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressClipboardPaste", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressLastEmptyLineOnPaste", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "serverSideSortingAlwaysResets", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "reactNext", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressSetColumnStateEvents", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableCharts", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "deltaColumnMode", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMaintainUnsortedOrder", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "enableCellTextSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressBrowserResizeObserver", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "suppressMaxRenderedRowRestriction", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "excludeChildrenWhenTreeDataFiltering", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "tooltipMouseTrack", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "keepDetailRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "paginateChildRows", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "preventDefaultOnContextMenu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "undoRedoCellEditing", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "allowDragFromColumnsToolPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "immutableData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "immutableColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridAngular.prototype, "pivotSuppressAutoColumn", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnEverythingChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "newColumnsLoaded", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnPivotModeChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnRowGroupChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "expandOrCollapseAll", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnPivotChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "gridColumnsChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnValueChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnMoved", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnVisible", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnPinned", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnGroupOpened", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnResized", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "displayedColumnsChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "virtualColumnsChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowGroupOpened", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDataChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDataUpdated", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "pinnedRowDataChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rangeSelectionChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "chartCreated", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "chartRangeSelectionChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "chartOptionsChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "chartDestroyed", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "toolPanelVisibleChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "modelUpdated", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "pasteStart", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "pasteEnd", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "fillStart", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "fillEnd", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellDoubleClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellMouseDown", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellContextMenu", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellValueChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowValueChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellFocused", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowSelected", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "selectionChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellKeyDown", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellKeyPress", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellMouseOver", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellMouseOut", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "filterChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "filterModified", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "filterOpened", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "sortChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "virtualRowRemoved", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDoubleClicked", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "gridReady", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "gridSizeChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "viewportChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "firstDataRendered", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "dragStarted", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "dragStopped", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "checkboxChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowEditingStarted", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowEditingStopped", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellEditingStarted", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "cellEditingStopped", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "bodyScroll", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "animationQueueEmpty", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "heightScaleChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "paginationChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "componentStateChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "bodyHeightChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "displayedColumnsWidthChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "scrollVisibilityChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnHoverChanged", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "flashCells", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDragEnter", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDragMove", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDragLeave", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "rowDragEnd", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "popupToFront", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnRowGroupChangeRequest", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnPivotChangeRequest", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnValueChangeRequest", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "columnAggFuncChangeRequest", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "keyboardFocus", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], AgGridAngular.prototype, "mouseFocus", void 0);
AgGridAngular = __decorate([ __metadata("design:paramtypes", [ElementRef,
        ViewContainerRef,
        AngularFrameworkOverrides,
        AngularFrameworkComponentWrapper,
        ComponentFactoryResolver])
], AgGridAngular);
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(AgGridAngular, [{
        type: Component,
        args: [{
                selector: 'ag-grid-angular',
                template: '',
                providers: [
                    AngularFrameworkOverrides,
                    AngularFrameworkComponentWrapper
                ],
                // tell angular we don't want view encapsulation, we don't want a shadow root
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.ViewContainerRef }, { type: AngularFrameworkOverrides }, { type: AngularFrameworkComponentWrapper }, { type: Éµngcc0.ComponentFactoryResolver }]; }, { slaveGrids: [{
            type: Input
        }], alignedGrids: [{
            type: Input
        }], rowData: [{
            type: Input
        }], columnDefs: [{
            type: Input
        }], excelStyles: [{
            type: Input
        }], pinnedTopRowData: [{
            type: Input
        }], pinnedBottomRowData: [{
            type: Input
        }], components: [{
            type: Input
        }], frameworkComponents: [{
            type: Input
        }], rowStyle: [{
            type: Input
        }], context: [{
            type: Input
        }], autoGroupColumnDef: [{
            type: Input
        }], groupColumnDef: [{
            type: Input
        }], localeText: [{
            type: Input
        }], icons: [{
            type: Input
        }], datasource: [{
            type: Input
        }], serverSideDatasource: [{
            type: Input
        }], viewportDatasource: [{
            type: Input
        }], groupRowRendererParams: [{
            type: Input
        }], aggFuncs: [{
            type: Input
        }], fullWidthCellRendererParams: [{
            type: Input
        }], defaultColGroupDef: [{
            type: Input
        }], defaultColDef: [{
            type: Input
        }], defaultExportParams: [{
            type: Input
        }], columnTypes: [{
            type: Input
        }], rowClassRules: [{
            type: Input
        }], detailGridOptions: [{
            type: Input
        }], detailCellRendererParams: [{
            type: Input
        }], loadingCellRendererParams: [{
            type: Input
        }], loadingOverlayComponentParams: [{
            type: Input
        }], noRowsOverlayComponentParams: [{
            type: Input
        }], popupParent: [{
            type: Input
        }], colResizeDefault: [{
            type: Input
        }], reduxStore: [{
            type: Input
        }], statusBar: [{
            type: Input
        }], sideBar: [{
            type: Input
        }], sortingOrder: [{
            type: Input
        }], rowClass: [{
            type: Input
        }], rowSelection: [{
            type: Input
        }], overlayLoadingTemplate: [{
            type: Input
        }], overlayNoRowsTemplate: [{
            type: Input
        }], quickFilterText: [{
            type: Input
        }], rowModelType: [{
            type: Input
        }], editType: [{
            type: Input
        }], domLayout: [{
            type: Input
        }], clipboardDeliminator: [{
            type: Input
        }], rowGroupPanelShow: [{
            type: Input
        }], multiSortKey: [{
            type: Input
        }], pivotColumnGroupTotals: [{
            type: Input
        }], pivotRowTotals: [{
            type: Input
        }], pivotPanelShow: [{
            type: Input
        }], rowHeight: [{
            type: Input
        }], detailRowHeight: [{
            type: Input
        }], rowBuffer: [{
            type: Input
        }], colWidth: [{
            type: Input
        }], headerHeight: [{
            type: Input
        }], groupHeaderHeight: [{
            type: Input
        }], floatingFiltersHeight: [{
            type: Input
        }], pivotHeaderHeight: [{
            type: Input
        }], pivotGroupHeaderHeight: [{
            type: Input
        }], groupDefaultExpanded: [{
            type: Input
        }], minColWidth: [{
            type: Input
        }], maxColWidth: [{
            type: Input
        }], viewportRowModelPageSize: [{
            type: Input
        }], viewportRowModelBufferSize: [{
            type: Input
        }], autoSizePadding: [{
            type: Input
        }], maxBlocksInCache: [{
            type: Input
        }], maxConcurrentDatasourceRequests: [{
            type: Input
        }], tooltipShowDelay: [{
            type: Input
        }], cacheOverflowSize: [{
            type: Input
        }], paginationPageSize: [{
            type: Input
        }], cacheBlockSize: [{
            type: Input
        }], infiniteInitialRowCount: [{
            type: Input
        }], scrollbarWidth: [{
            type: Input
        }], paginationStartPage: [{
            type: Input
        }], infiniteBlockSize: [{
            type: Input
        }], batchUpdateWaitMillis: [{
            type: Input
        }], asyncTransactionWaitMillis: [{
            type: Input
        }], blockLoadDebounceMillis: [{
            type: Input
        }], keepDetailRowsCount: [{
            type: Input
        }], undoRedoCellEditingLimit: [{
            type: Input
        }], cellFlashDelay: [{
            type: Input
        }], cellFadeDelay: [{
            type: Input
        }], localeTextFunc: [{
            type: Input
        }], groupRowInnerRenderer: [{
            type: Input
        }], groupRowInnerRendererFramework: [{
            type: Input
        }], dateComponent: [{
            type: Input
        }], dateComponentFramework: [{
            type: Input
        }], groupRowRenderer: [{
            type: Input
        }], groupRowRendererFramework: [{
            type: Input
        }], isExternalFilterPresent: [{
            type: Input
        }], getRowHeight: [{
            type: Input
        }], doesExternalFilterPass: [{
            type: Input
        }], getRowClass: [{
            type: Input
        }], getRowStyle: [{
            type: Input
        }], getRowClassRules: [{
            type: Input
        }], traverseNode: [{
            type: Input
        }], getContextMenuItems: [{
            type: Input
        }], getMainMenuItems: [{
            type: Input
        }], processRowPostCreate: [{
            type: Input
        }], processCellForClipboard: [{
            type: Input
        }], getNodeChildDetails: [{
            type: Input
        }], groupRowAggNodes: [{
            type: Input
        }], getRowNodeId: [{
            type: Input
        }], isFullWidthCell: [{
            type: Input
        }], fullWidthCellRenderer: [{
            type: Input
        }], fullWidthCellRendererFramework: [{
            type: Input
        }], doesDataFlower: [{
            type: Input
        }], processSecondaryColDef: [{
            type: Input
        }], processSecondaryColGroupDef: [{
            type: Input
        }], getBusinessKeyForNode: [{
            type: Input
        }], sendToClipboard: [{
            type: Input
        }], navigateToNextCell: [{
            type: Input
        }], tabToNextCell: [{
            type: Input
        }], getDetailRowData: [{
            type: Input
        }], processCellFromClipboard: [{
            type: Input
        }], getDocument: [{
            type: Input
        }], postProcessPopup: [{
            type: Input
        }], getChildCount: [{
            type: Input
        }], getDataPath: [{
            type: Input
        }], loadingCellRenderer: [{
            type: Input
        }], loadingCellRendererFramework: [{
            type: Input
        }], loadingOverlayComponent: [{
            type: Input
        }], loadingOverlayComponentFramework: [{
            type: Input
        }], noRowsOverlayComponent: [{
            type: Input
        }], noRowsOverlayComponentFramework: [{
            type: Input
        }], detailCellRenderer: [{
            type: Input
        }], detailCellRendererFramework: [{
            type: Input
        }], defaultGroupSortComparator: [{
            type: Input
        }], isRowMaster: [{
            type: Input
        }], isRowSelectable: [{
            type: Input
        }], postSort: [{
            type: Input
        }], processHeaderForClipboard: [{
            type: Input
        }], paginationNumberFormatter: [{
            type: Input
        }], processDataFromClipboard: [{
            type: Input
        }], getServerSideGroupKey: [{
            type: Input
        }], isServerSideGroup: [{
            type: Input
        }], suppressKeyboardEvent: [{
            type: Input
        }], createChartContainer: [{
            type: Input
        }], processChartOptions: [{
            type: Input
        }], getChartToolbarItems: [{
            type: Input
        }], fillOperation: [{
            type: Input
        }], toolPanelSuppressRowGroups: [{
            type: Input
        }], toolPanelSuppressValues: [{
            type: Input
        }], toolPanelSuppressPivots: [{
            type: Input
        }], toolPanelSuppressPivotMode: [{
            type: Input
        }], toolPanelSuppressSideButtons: [{
            type: Input
        }], toolPanelSuppressColumnFilter: [{
            type: Input
        }], toolPanelSuppressColumnSelectAll: [{
            type: Input
        }], toolPanelSuppressColumnExpandAll: [{
            type: Input
        }], suppressMakeColumnVisibleAfterUnGroup: [{
            type: Input
        }], suppressRowClickSelection: [{
            type: Input
        }], suppressCellSelection: [{
            type: Input
        }], suppressHorizontalScroll: [{
            type: Input
        }], alwaysShowVerticalScroll: [{
            type: Input
        }], debug: [{
            type: Input
        }], enableBrowserTooltips: [{
            type: Input
        }], enableColResize: [{
            type: Input
        }], enableCellExpressions: [{
            type: Input
        }], enableSorting: [{
            type: Input
        }], enableServerSideSorting: [{
            type: Input
        }], enableFilter: [{
            type: Input
        }], enableServerSideFilter: [{
            type: Input
        }], angularCompileRows: [{
            type: Input
        }], angularCompileFilters: [{
            type: Input
        }], angularCompileHeaders: [{
            type: Input
        }], groupSuppressAutoColumn: [{
            type: Input
        }], groupSelectsChildren: [{
            type: Input
        }], groupIncludeFooter: [{
            type: Input
        }], groupIncludeTotalFooter: [{
            type: Input
        }], groupUseEntireRow: [{
            type: Input
        }], groupSuppressRow: [{
            type: Input
        }], groupSuppressBlankHeader: [{
            type: Input
        }], forPrint: [{
            type: Input
        }], suppressMenuHide: [{
            type: Input
        }], rowDeselection: [{
            type: Input
        }], unSortIcon: [{
            type: Input
        }], suppressMultiSort: [{
            type: Input
        }], singleClickEdit: [{
            type: Input
        }], suppressLoadingOverlay: [{
            type: Input
        }], suppressNoRowsOverlay: [{
            type: Input
        }], suppressAutoSize: [{
            type: Input
        }], skipHeaderOnAutoSize: [{
            type: Input
        }], suppressParentsInRowNodes: [{
            type: Input
        }], showToolPanel: [{
            type: Input
        }], suppressColumnMoveAnimation: [{
            type: Input
        }], suppressMovableColumns: [{
            type: Input
        }], suppressFieldDotNotation: [{
            type: Input
        }], enableRangeSelection: [{
            type: Input
        }], enableRangeHandle: [{
            type: Input
        }], enableFillHandle: [{
            type: Input
        }], suppressClearOnFillReduction: [{
            type: Input
        }], deltaSort: [{
            type: Input
        }], suppressTouch: [{
            type: Input
        }], suppressAsyncEvents: [{
            type: Input
        }], allowContextMenuWithControlKey: [{
            type: Input
        }], suppressContextMenu: [{
            type: Input
        }], suppressMenuFilterPanel: [{
            type: Input
        }], suppressMenuMainPanel: [{
            type: Input
        }], suppressMenuColumnPanel: [{
            type: Input
        }], rememberGroupStateWhenNewData: [{
            type: Input
        }], enableCellChangeFlash: [{
            type: Input
        }], suppressDragLeaveHidesColumns: [{
            type: Input
        }], suppressMiddleClickScrolls: [{
            type: Input
        }], suppressPreventDefaultOnMouseWheel: [{
            type: Input
        }], suppressUseColIdForGroups: [{
            type: Input
        }], suppressCopyRowsToClipboard: [{
            type: Input
        }], copyHeadersToClipboard: [{
            type: Input
        }], pivotMode: [{
            type: Input
        }], suppressAggFuncInHeader: [{
            type: Input
        }], suppressColumnVirtualisation: [{
            type: Input
        }], suppressAggAtRootLevel: [{
            type: Input
        }], suppressFocusAfterRefresh: [{
            type: Input
        }], functionsPassive: [{
            type: Input
        }], functionsReadOnly: [{
            type: Input
        }], animateRows: [{
            type: Input
        }], groupSelectsFiltered: [{
            type: Input
        }], groupRemoveSingleChildren: [{
            type: Input
        }], groupRemoveLowestSingleChildren: [{
            type: Input
        }], enableRtl: [{
            type: Input
        }], suppressClickEdit: [{
            type: Input
        }], rowDragManaged: [{
            type: Input
        }], suppressRowDrag: [{
            type: Input
        }], suppressMoveWhenRowDragging: [{
            type: Input
        }], enableMultiRowDragging: [{
            type: Input
        }], enableGroupEdit: [{
            type: Input
        }], embedFullWidthRows: [{
            type: Input
        }], deprecatedEmbedFullWidthRows: [{
            type: Input
        }], suppressTabbing: [{
            type: Input
        }], suppressPaginationPanel: [{
            type: Input
        }], floatingFilter: [{
            type: Input
        }], groupHideOpenParents: [{
            type: Input
        }], groupMultiAutoColumn: [{
            type: Input
        }], pagination: [{
            type: Input
        }], stopEditingWhenGridLosesFocus: [{
            type: Input
        }], paginationAutoPageSize: [{
            type: Input
        }], suppressScrollOnNewData: [{
            type: Input
        }], purgeClosedRowNodes: [{
            type: Input
        }], cacheQuickFilter: [{
            type: Input
        }], deltaRowDataMode: [{
            type: Input
        }], ensureDomOrder: [{
            type: Input
        }], accentedSort: [{
            type: Input
        }], pivotTotals: [{
            type: Input
        }], suppressChangeDetection: [{
            type: Input
        }], valueCache: [{
            type: Input
        }], valueCacheNeverExpires: [{
            type: Input
        }], aggregateOnlyChangedColumns: [{
            type: Input
        }], suppressAnimationFrame: [{
            type: Input
        }], suppressExcelExport: [{
            type: Input
        }], suppressCsvExport: [{
            type: Input
        }], treeData: [{
            type: Input
        }], masterDetail: [{
            type: Input
        }], suppressMultiRangeSelection: [{
            type: Input
        }], enterMovesDownAfterEdit: [{
            type: Input
        }], enterMovesDown: [{
            type: Input
        }], suppressPropertyNamesCheck: [{
            type: Input
        }], rowMultiSelectWithClick: [{
            type: Input
        }], contractColumnSelection: [{
            type: Input
        }], suppressEnterpriseResetOnNewColumns: [{
            type: Input
        }], enableOldSetFilterModel: [{
            type: Input
        }], suppressRowHoverHighlight: [{
            type: Input
        }], gridAutoHeight: [{
            type: Input
        }], suppressRowTransform: [{
            type: Input
        }], suppressClipboardPaste: [{
            type: Input
        }], suppressLastEmptyLineOnPaste: [{
            type: Input
        }], serverSideSortingAlwaysResets: [{
            type: Input
        }], reactNext: [{
            type: Input
        }], suppressSetColumnStateEvents: [{
            type: Input
        }], enableCharts: [{
            type: Input
        }], deltaColumnMode: [{
            type: Input
        }], suppressMaintainUnsortedOrder: [{
            type: Input
        }], enableCellTextSelection: [{
            type: Input
        }], suppressBrowserResizeObserver: [{
            type: Input
        }], suppressMaxRenderedRowRestriction: [{
            type: Input
        }], excludeChildrenWhenTreeDataFiltering: [{
            type: Input
        }], tooltipMouseTrack: [{
            type: Input
        }], keepDetailRows: [{
            type: Input
        }], paginateChildRows: [{
            type: Input
        }], preventDefaultOnContextMenu: [{
            type: Input
        }], undoRedoCellEditing: [{
            type: Input
        }], allowDragFromColumnsToolPanel: [{
            type: Input
        }], immutableData: [{
            type: Input
        }], immutableColumns: [{
            type: Input
        }], pivotSuppressAutoColumn: [{
            type: Input
        }], columnEverythingChanged: [{
            type: Output
        }], newColumnsLoaded: [{
            type: Output
        }], columnPivotModeChanged: [{
            type: Output
        }], columnRowGroupChanged: [{
            type: Output
        }], expandOrCollapseAll: [{
            type: Output
        }], columnPivotChanged: [{
            type: Output
        }], gridColumnsChanged: [{
            type: Output
        }], columnValueChanged: [{
            type: Output
        }], columnMoved: [{
            type: Output
        }], columnVisible: [{
            type: Output
        }], columnPinned: [{
            type: Output
        }], columnGroupOpened: [{
            type: Output
        }], columnResized: [{
            type: Output
        }], displayedColumnsChanged: [{
            type: Output
        }], virtualColumnsChanged: [{
            type: Output
        }], rowGroupOpened: [{
            type: Output
        }], rowDataChanged: [{
            type: Output
        }], rowDataUpdated: [{
            type: Output
        }], pinnedRowDataChanged: [{
            type: Output
        }], rangeSelectionChanged: [{
            type: Output
        }], chartCreated: [{
            type: Output
        }], chartRangeSelectionChanged: [{
            type: Output
        }], chartOptionsChanged: [{
            type: Output
        }], chartDestroyed: [{
            type: Output
        }], toolPanelVisibleChanged: [{
            type: Output
        }], modelUpdated: [{
            type: Output
        }], pasteStart: [{
            type: Output
        }], pasteEnd: [{
            type: Output
        }], fillStart: [{
            type: Output
        }], fillEnd: [{
            type: Output
        }], cellClicked: [{
            type: Output
        }], cellDoubleClicked: [{
            type: Output
        }], cellMouseDown: [{
            type: Output
        }], cellContextMenu: [{
            type: Output
        }], cellValueChanged: [{
            type: Output
        }], rowValueChanged: [{
            type: Output
        }], cellFocused: [{
            type: Output
        }], rowSelected: [{
            type: Output
        }], selectionChanged: [{
            type: Output
        }], cellKeyDown: [{
            type: Output
        }], cellKeyPress: [{
            type: Output
        }], cellMouseOver: [{
            type: Output
        }], cellMouseOut: [{
            type: Output
        }], filterChanged: [{
            type: Output
        }], filterModified: [{
            type: Output
        }], filterOpened: [{
            type: Output
        }], sortChanged: [{
            type: Output
        }], virtualRowRemoved: [{
            type: Output
        }], rowClicked: [{
            type: Output
        }], rowDoubleClicked: [{
            type: Output
        }], gridReady: [{
            type: Output
        }], gridSizeChanged: [{
            type: Output
        }], viewportChanged: [{
            type: Output
        }], firstDataRendered: [{
            type: Output
        }], dragStarted: [{
            type: Output
        }], dragStopped: [{
            type: Output
        }], checkboxChanged: [{
            type: Output
        }], rowEditingStarted: [{
            type: Output
        }], rowEditingStopped: [{
            type: Output
        }], cellEditingStarted: [{
            type: Output
        }], cellEditingStopped: [{
            type: Output
        }], bodyScroll: [{
            type: Output
        }], animationQueueEmpty: [{
            type: Output
        }], heightScaleChanged: [{
            type: Output
        }], paginationChanged: [{
            type: Output
        }], componentStateChanged: [{
            type: Output
        }], bodyHeightChanged: [{
            type: Output
        }], displayedColumnsWidthChanged: [{
            type: Output
        }], scrollVisibilityChanged: [{
            type: Output
        }], columnHoverChanged: [{
            type: Output
        }], flashCells: [{
            type: Output
        }], rowDragEnter: [{
            type: Output
        }], rowDragMove: [{
            type: Output
        }], rowDragLeave: [{
            type: Output
        }], rowDragEnd: [{
            type: Output
        }], popupToFront: [{
            type: Output
        }], columnRowGroupChangeRequest: [{
            type: Output
        }], columnPivotChangeRequest: [{
            type: Output
        }], columnValueChangeRequest: [{
            type: Output
        }], columnAggFuncChangeRequest: [{
            type: Output
        }], keyboardFocus: [{
            type: Output
        }], mouseFocus: [{
            type: Output
        }], gridOptions: [{
            type: Input
        }], columns: [{
            type: ContentChildren,
            args: [AgGridColumn]
        }], modules: [{
            type: Input
        }] }); })();
export { AgGridAngular };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,