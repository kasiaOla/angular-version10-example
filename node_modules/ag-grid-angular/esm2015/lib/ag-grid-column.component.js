import * as ɵngcc0 from '@angular/core';
var AgGridColumn_1;
import { __decorate, __metadata } from "tslib";
import { Component, ContentChildren, Input, QueryList } from "@angular/core";
let AgGridColumn = AgGridColumn_1 = class AgGridColumn {
    hasChildColumns() {
        if (this.childColumns && this.childColumns.length > 0) {
            // necessary because of https://github.com/angular/angular/issues/10098
            return !(this.childColumns.length === 1 && this.childColumns.first === this);
        }
        return false;
    }
    toColDef() {
        let colDef = this.createColDefFromGridColumn(this);
        if (this.hasChildColumns()) {
            colDef["children"] = this.getChildColDefs(this.childColumns);
        }
        return colDef;
    }
    getChildColDefs(childColumns) {
        return childColumns
            // necessary because of https://github.com/angular/angular/issues/10098
            .filter(column => !column.hasChildColumns())
            .map((column) => {
            return column.toColDef();
        });
    }
    ;
    createColDefFromGridColumn(from) {
        let colDef = {};
        Object.assign(colDef, from);
        delete colDef.childColumns;
        return colDef;
    }
    ;
};
AgGridColumn.ɵfac = function AgGridColumn_Factory(t) { return new (t || AgGridColumn)(); };
AgGridColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AgGridColumn, selectors: [["ag-grid-column"]], contentQueries: function AgGridColumn_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AgGridColumn_1, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childColumns = _t);
    } }, inputs: { children: "children", sortingOrder: "sortingOrder", allowedAggFuncs: "allowedAggFuncs", menuTabs: "menuTabs", cellClassRules: "cellClassRules", icons: "icons", headerGroupComponent: "headerGroupComponent", headerGroupComponentFramework: "headerGroupComponentFramework", headerGroupComponentParams: "headerGroupComponentParams", cellStyle: "cellStyle", cellRendererParams: "cellRendererParams", cellEditorFramework: "cellEditorFramework", cellEditorParams: "cellEditorParams", pinnedRowCellRendererFramework: "pinnedRowCellRendererFramework", pinnedRowCellRendererParams: "pinnedRowCellRendererParams", filterFramework: "filterFramework", filterParams: "filterParams", headerComponent: "headerComponent", headerComponentFramework: "headerComponentFramework", headerComponentParams: "headerComponentParams", floatingFilterComponent: "floatingFilterComponent", floatingFilterComponentParams: "floatingFilterComponentParams", floatingFilterComponentFramework: "floatingFilterComponentFramework", tooltipComponent: "tooltipComponent", tooltipComponentParams: "tooltipComponentParams", tooltipComponentFramework: "tooltipComponentFramework", refData: "refData", headerName: "headerName", columnGroupShow: "columnGroupShow", headerClass: "headerClass", toolPanelClass: "toolPanelClass", headerValueGetter: "headerValueGetter", groupId: "groupId", colId: "colId", sort: "sort", field: "field", type: "type", tooltipField: "tooltipField", headerTooltip: "headerTooltip", cellClass: "cellClass", showRowGroup: "showRowGroup", filter: "filter", aggFunc: "aggFunc", cellRenderer: "cellRenderer", cellEditor: "cellEditor", pinned: "pinned", chartDataType: "chartDataType", sortedAt: "sortedAt", flex: "flex", width: "width", minWidth: "minWidth", maxWidth: "maxWidth", rowGroupIndex: "rowGroupIndex", pivotIndex: "pivotIndex", dndSourceOnRowDrag: "dndSourceOnRowDrag", valueGetter: "valueGetter", valueSetter: "valueSetter", filterValueGetter: "filterValueGetter", keyCreator: "keyCreator", cellRendererFramework: "cellRendererFramework", pinnedRowCellRenderer: "pinnedRowCellRenderer", valueFormatter: "valueFormatter", pinnedRowValueFormatter: "pinnedRowValueFormatter", valueParser: "valueParser", comparator: "comparator", equals: "equals", pivotComparator: "pivotComparator", suppressKeyboardEvent: "suppressKeyboardEvent", colSpan: "colSpan", rowSpan: "rowSpan", getQuickFilterText: "getQuickFilterText", newValueHandler: "newValueHandler", onCellValueChanged: "onCellValueChanged", onCellClicked: "onCellClicked", onCellDoubleClicked: "onCellDoubleClicked", onCellContextMenu: "onCellContextMenu", rowDragText: "rowDragText", tooltip: "tooltip", tooltipValueGetter: "tooltipValueGetter", cellRendererSelector: "cellRendererSelector", cellEditorSelector: "cellEditorSelector", suppressCellFlash: "suppressCellFlash", suppressColumnsToolPanel: "suppressColumnsToolPanel", suppressFiltersToolPanel: "suppressFiltersToolPanel", openByDefault: "openByDefault", marryChildren: "marryChildren", hide: "hide", rowGroup: "rowGroup", pivot: "pivot", checkboxSelection: "checkboxSelection", headerCheckboxSelection: "headerCheckboxSelection", headerCheckboxSelectionFilteredOnly: "headerCheckboxSelectionFilteredOnly", suppressMenu: "suppressMenu", suppressSorting: "suppressSorting", suppressMovable: "suppressMovable", suppressFilter: "suppressFilter", lockPosition: "lockPosition", lockVisible: "lockVisible", lockPinned: "lockPinned", unSortIcon: "unSortIcon", suppressSizeToFit: "suppressSizeToFit", suppressResize: "suppressResize", suppressAutoSize: "suppressAutoSize", enableRowGroup: "enableRowGroup", enablePivot: "enablePivot", enableValue: "enableValue", editable: "editable", suppressPaste: "suppressPaste", suppressNavigable: "suppressNavigable", enableCellChangeFlash: "enableCellChangeFlash", rowDrag: "rowDrag", dndSource: "dndSource", autoHeight: "autoHeight", sortable: "sortable", resizable: "resizable", singleClickEdit: "singleClickEdit", floatingFilter: "floatingFilter" }, decls: 0, vars: 0, template: function AgGridColumn_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(AgGridColumn_1),
    __metadata("design:type", QueryList)
], AgGridColumn.prototype, "childColumns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "children", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "sortingOrder", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "allowedAggFuncs", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "menuTabs", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellClassRules", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "icons", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerGroupComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerGroupComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerGroupComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellStyle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellEditorFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellEditorParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pinnedRowCellRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pinnedRowCellRendererParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "filterFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "filterParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "floatingFilterComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "floatingFilterComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "floatingFilterComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltipComponent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltipComponentParams", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltipComponentFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "refData", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerName", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "columnGroupShow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "toolPanelClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerValueGetter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "groupId", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "colId", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "sort", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "field", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "type", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltipField", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerTooltip", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "showRowGroup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "filter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "aggFunc", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellEditor", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pinned", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "chartDataType", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "sortedAt", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "flex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "width", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "minWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "maxWidth", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "rowGroupIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pivotIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "dndSourceOnRowDrag", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "valueGetter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "valueSetter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "filterValueGetter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "keyCreator", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellRendererFramework", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pinnedRowCellRenderer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "valueFormatter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pinnedRowValueFormatter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "valueParser", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "comparator", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "equals", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pivotComparator", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressKeyboardEvent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "colSpan", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "rowSpan", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "getQuickFilterText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "newValueHandler", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "onCellValueChanged", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "onCellClicked", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "onCellDoubleClicked", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "onCellContextMenu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "rowDragText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltip", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "tooltipValueGetter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellRendererSelector", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "cellEditorSelector", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressCellFlash", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressColumnsToolPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressFiltersToolPanel", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "openByDefault", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "marryChildren", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "hide", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "rowGroup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "pivot", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "checkboxSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerCheckboxSelection", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "headerCheckboxSelectionFilteredOnly", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressMenu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressSorting", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressMovable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressFilter", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "lockPosition", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "lockVisible", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "lockPinned", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "unSortIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressSizeToFit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressResize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressAutoSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "enableRowGroup", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "enablePivot", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "enableValue", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "editable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressPaste", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "suppressNavigable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "enableCellChangeFlash", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "rowDrag", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "dndSource", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "autoHeight", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "sortable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "resizable", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "singleClickEdit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AgGridColumn.prototype, "floatingFilter", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgGridColumn, [{
        type: Component,
        args: [{
                selector: 'ag-grid-column',
                template: ''
            }]
    }], null, { childColumns: [{
            type: ContentChildren,
            args: [AgGridColumn_1]
        }], children: [{
            type: Input
        }], sortingOrder: [{
            type: Input
        }], allowedAggFuncs: [{
            type: Input
        }], menuTabs: [{
            type: Input
        }], cellClassRules: [{
            type: Input
        }], icons: [{
            type: Input
        }], headerGroupComponent: [{
            type: Input
        }], headerGroupComponentFramework: [{
            type: Input
        }], headerGroupComponentParams: [{
            type: Input
        }], cellStyle: [{
            type: Input
        }], cellRendererParams: [{
            type: Input
        }], cellEditorFramework: [{
            type: Input
        }], cellEditorParams: [{
            type: Input
        }], pinnedRowCellRendererFramework: [{
            type: Input
        }], pinnedRowCellRendererParams: [{
            type: Input
        }], filterFramework: [{
            type: Input
        }], filterParams: [{
            type: Input
        }], headerComponent: [{
            type: Input
        }], headerComponentFramework: [{
            type: Input
        }], headerComponentParams: [{
            type: Input
        }], floatingFilterComponent: [{
            type: Input
        }], floatingFilterComponentParams: [{
            type: Input
        }], floatingFilterComponentFramework: [{
            type: Input
        }], tooltipComponent: [{
            type: Input
        }], tooltipComponentParams: [{
            type: Input
        }], tooltipComponentFramework: [{
            type: Input
        }], refData: [{
            type: Input
        }], headerName: [{
            type: Input
        }], columnGroupShow: [{
            type: Input
        }], headerClass: [{
            type: Input
        }], toolPanelClass: [{
            type: Input
        }], headerValueGetter: [{
            type: Input
        }], groupId: [{
            type: Input
        }], colId: [{
            type: Input
        }], sort: [{
            type: Input
        }], field: [{
            type: Input
        }], type: [{
            type: Input
        }], tooltipField: [{
            type: Input
        }], headerTooltip: [{
            type: Input
        }], cellClass: [{
            type: Input
        }], showRowGroup: [{
            type: Input
        }], filter: [{
            type: Input
        }], aggFunc: [{
            type: Input
        }], cellRenderer: [{
            type: Input
        }], cellEditor: [{
            type: Input
        }], pinned: [{
            type: Input
        }], chartDataType: [{
            type: Input
        }], sortedAt: [{
            type: Input
        }], flex: [{
            type: Input
        }], width: [{
            type: Input
        }], minWidth: [{
            type: Input
        }], maxWidth: [{
            type: Input
        }], rowGroupIndex: [{
            type: Input
        }], pivotIndex: [{
            type: Input
        }], dndSourceOnRowDrag: [{
            type: Input
        }], valueGetter: [{
            type: Input
        }], valueSetter: [{
            type: Input
        }], filterValueGetter: [{
            type: Input
        }], keyCreator: [{
            type: Input
        }], cellRendererFramework: [{
            type: Input
        }], pinnedRowCellRenderer: [{
            type: Input
        }], valueFormatter: [{
            type: Input
        }], pinnedRowValueFormatter: [{
            type: Input
        }], valueParser: [{
            type: Input
        }], comparator: [{
            type: Input
        }], equals: [{
            type: Input
        }], pivotComparator: [{
            type: Input
        }], suppressKeyboardEvent: [{
            type: Input
        }], colSpan: [{
            type: Input
        }], rowSpan: [{
            type: Input
        }], getQuickFilterText: [{
            type: Input
        }], newValueHandler: [{
            type: Input
        }], onCellValueChanged: [{
            type: Input
        }], onCellClicked: [{
            type: Input
        }], onCellDoubleClicked: [{
            type: Input
        }], onCellContextMenu: [{
            type: Input
        }], rowDragText: [{
            type: Input
        }], tooltip: [{
            type: Input
        }], tooltipValueGetter: [{
            type: Input
        }], cellRendererSelector: [{
            type: Input
        }], cellEditorSelector: [{
            type: Input
        }], suppressCellFlash: [{
            type: Input
        }], suppressColumnsToolPanel: [{
            type: Input
        }], suppressFiltersToolPanel: [{
            type: Input
        }], openByDefault: [{
            type: Input
        }], marryChildren: [{
            type: Input
        }], hide: [{
            type: Input
        }], rowGroup: [{
            type: Input
        }], pivot: [{
            type: Input
        }], checkboxSelection: [{
            type: Input
        }], headerCheckboxSelection: [{
            type: Input
        }], headerCheckboxSelectionFilteredOnly: [{
            type: Input
        }], suppressMenu: [{
            type: Input
        }], suppressSorting: [{
            type: Input
        }], suppressMovable: [{
            type: Input
        }], suppressFilter: [{
            type: Input
        }], lockPosition: [{
            type: Input
        }], lockVisible: [{
            type: Input
        }], lockPinned: [{
            type: Input
        }], unSortIcon: [{
            type: Input
        }], suppressSizeToFit: [{
            type: Input
        }], suppressResize: [{
            type: Input
        }], suppressAutoSize: [{
            type: Input
        }], enableRowGroup: [{
            type: Input
        }], enablePivot: [{
            type: Input
        }], enableValue: [{
            type: Input
        }], editable: [{
            type: Input
        }], suppressPaste: [{
            type: Input
        }], suppressNavigable: [{
            type: Input
        }], enableCellChangeFlash: [{
            type: Input
        }], rowDrag: [{
            type: Input
        }], dndSource: [{
            type: Input
        }], autoHeight: [{
            type: Input
        }], sortable: [{
            type: Input
        }], resizable: [{
            type: Input
        }], singleClickEdit: [{
            type: Input
        }], floatingFilter: [{
            type: Input
        }] }); })();
export { AgGridColumn };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,