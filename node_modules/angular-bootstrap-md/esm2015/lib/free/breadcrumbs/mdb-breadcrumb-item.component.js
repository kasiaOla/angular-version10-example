import { __decorate, __metadata } from "tslib";
import { Component, ElementRef, Input, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
let MdbBreadcrumbItemComponent = class MdbBreadcrumbItemComponent {
    constructor(_el, _renderer) {
        this._el = _el;
        this._renderer = _renderer;
    }
    ngOnInit() {
        this._renderer.addClass(this._el.nativeElement, 'breadcrumb-item');
    }
};
MdbBreadcrumbItemComponent.ɵfac = function MdbBreadcrumbItemComponent_Factory(t) { return new (t || MdbBreadcrumbItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
MdbBreadcrumbItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbBreadcrumbItemComponent, selectors: [["mdb-breadcrumb-item"]], inputs: { fontWeight: "fontWeight" }, ngContentSelectors: _c0, decls: 2, vars: 3, template: function MdbBreadcrumbItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("list-inline-item breadcrumb-item font-weight-", ctx.fontWeight, "");
    } }, styles: [".breadcrumb-item{cursor:pointer}.breadcrumb-item.active{color:#6c757d!important}.breadcrumb-item.active>.breadcrumb-item{cursor:default}.light-font .breadcrumb-item:before{color:#fff}.light-font .breadcrumb-item.active{color:#cfd8dc!important}.light-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}.dark-font .breadcrumb-item:before{color:#000}.dark-font .breadcrumb-item.active{color:#455a64!important}.dark-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}"], encapsulation: 2 });
MdbBreadcrumbItemComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], MdbBreadcrumbItemComponent.prototype, "fontWeight", void 0);
MdbBreadcrumbItemComponent = __decorate([ __metadata("design:paramtypes", [ElementRef, Renderer2])
], MdbBreadcrumbItemComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbBreadcrumbItemComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-breadcrumb-item',
                template: "<li class=\"list-inline-item breadcrumb-item font-weight-{{fontWeight}}\">\n  <ng-content></ng-content>\n</li>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".breadcrumb-item{cursor:pointer}.breadcrumb-item.active{color:#6c757d!important}.breadcrumb-item.active>.breadcrumb-item{cursor:default}.light-font .breadcrumb-item:before{color:#fff}.light-font .breadcrumb-item.active{color:#cfd8dc!important}.light-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}.dark-font .breadcrumb-item:before{color:#000}.dark-font .breadcrumb-item.active{color:#455a64!important}.dark-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { fontWeight: [{
            type: Input
        }] }); })();
export { MdbBreadcrumbItemComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWJyZWFkY3J1bWItaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9hbmd1bGFyLWJvb3RzdHJhcC1tZC9saWIvZnJlZS9icmVhZGNydW1icy9tZGItYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFRbkcsSUFBYSwwQkFBMEIsR0FBdkMsTUFBYSwwQkFBMEI7QUFBRyxJQUd4QyxZQUFvQixHQUFlLEVBQVUsU0FBb0I7QUFBSSxRQUFqRCxRQUFHLEdBQUgsR0FBRyxDQUFZO0FBQUMsUUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFXO0FBQUMsSUFBRSxDQUFDO0FBQ3ZFLElBQ0UsUUFBUTtBQUNWLFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUN2RSxJQUFFLENBQUM7QUFDSCxDQUFDOzs7Ozs7Ozs7OGdCQUFBO0FBQ0Q7QUFBb0QsWUFOekIsVUFBVTtBQUFJLFlBQWlCLFNBQVM7QUFBRztBQUYzRDtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFFO0FBRU0sOERBRlk7QUFEakIsMEJBQTBCLG9CQU50QyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUUscUJBQXFCLHhEQUs3QixrQ0FHdUIsVUFBVSxFQUFxQixTQUFTO1FBUGpFLFJBT29FLEdBSHpELDBCQUEwQixDQVF0Qzs7ZUFab0Q7QUFFbkQsYUFBYSxFQUFFO2VBQWlCLENBQUMsSUFBSTs7OzZSQUN0QyxDQUFDOzs7O29CQVVGO0FBQUMsU0FUWSwwQkFBMEI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uSW5pdCwgUmVuZGVyZXIyLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItYnJlYWRjcnVtYi1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21kYi1icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9fYnJlYWRjcnVtYnMuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBNZGJCcmVhZGNydW1iSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGZvbnRXZWlnaHQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbDogRWxlbWVudFJlZiwgcHJpdmF0ZSBfcmVuZGVyZXI6IFJlbmRlcmVyMikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLl9yZW5kZXJlci5hZGRDbGFzcyh0aGlzLl9lbC5uYXRpdmVFbGVtZW50LCAnYnJlYWRjcnVtYi1pdGVtJyk7XG4gIH1cbn1cbiJdfQ==