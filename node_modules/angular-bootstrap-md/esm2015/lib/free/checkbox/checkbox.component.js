import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, forwardRef, HostListener, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Subject, timer } from 'rxjs';
import { take } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["input"];
const _c1 = function (a0, a1, a2, a3) { return { "custom-control custom-checkbox": a0, "form-check": a1, "custom-control-inline": a2, "form-check-inline": a3 }; };
const _c2 = function (a0, a1, a2) { return { "filled-in": a0, "custom-control-input": a1, "form-check-input": a2 }; };
const _c3 = function (a0, a1, a2, a3, a4) { return { "custom-control-label": a0, "form-check-label": a1, "label-before": a2, "checkbox-rounded": a3, "disabled": a4 }; };
const _c4 = ["*"];
export const CHECKBOX_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => CheckboxComponent),
    multi: true,
};
let defaultIdNumber = 0;
export class MdbCheckboxChange {
}
let CheckboxComponent = class CheckboxComponent {
    constructor(_cdRef) {
        this._cdRef = _cdRef;
        this.defaultId = `mdb-checkbox-${++defaultIdNumber}`;
        this.id = this.defaultId;
        this.checked = false;
        this.filledIn = false;
        this.indeterminate = false;
        this.rounded = false;
        this.checkboxPosition = 'left';
        this.default = false;
        this.inline = false;
        this.change = new EventEmitter();
        this.checkboxClicked = new Subject();
        // Control Value Accessor Methods
        this.onChange = (_) => { };
        this.onTouched = () => { };
    }
    onLabelClick(event) {
        event.stopPropagation();
        this.checkboxClicked.next(true);
    }
    onDocumentClick() {
        this.checkboxClicked.next(false);
    }
    ngOnInit() {
        if (this.indeterminate && !this.filledIn && !this.rounded) {
            this.inputEl.indeterminate = true;
        }
    }
    ngOnChanges(changes) {
        if (changes.hasOwnProperty('checked')) {
            this.checked = changes.checked.currentValue;
        }
    }
    get changeEvent() {
        const newChangeEvent = new MdbCheckboxChange();
        newChangeEvent.element = this;
        newChangeEvent.checked = this.checked;
        return newChangeEvent;
    }
    toggle() {
        if (this.disabled) {
            return;
        }
        this.checked = !this.checked;
        this.indeterminate = false;
        this.onChange(this.checked);
        this._cdRef.markForCheck();
    }
    onCheckboxClick(event) {
        event.stopPropagation();
        this.toggle();
    }
    onCheckboxChange(event) {
        event.stopPropagation();
        timer(0).subscribe(() => this.change.emit(this.changeEvent));
    }
    onBlur() {
        this.checkboxClicked.pipe(take(1)).subscribe(val => {
            if (!val) {
                this.onTouched();
            }
        });
    }
    writeValue(value) {
        this.value = value;
        this.checked = !!value;
        this._cdRef.markForCheck();
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
};
CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) { return new (t || CheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
CheckboxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CheckboxComponent, selectors: [["mdb-checkbox"]], viewQuery: function CheckboxComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputEl = _t.first);
    } }, hostBindings: function CheckboxComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function CheckboxComponent_click_HostBindingHandler($event) { return ctx.onLabelClick($event); })("click", function CheckboxComponent_click_HostBindingHandler() { return ctx.onDocumentClick(); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { id: "id", checked: "checked", filledIn: "filledIn", indeterminate: "indeterminate", rounded: "rounded", checkboxPosition: "checkboxPosition", default: "default", inline: "inline", value: "value", disabled: "disabled", class: "class", required: "required", name: "name", tabIndex: "tabIndex" }, outputs: { change: "change" }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 5, vars: 27, consts: [[3, "ngClass"], ["type", "checkbox", 1, "custom-control-input", 3, "ngClass", "id", "checked", "disabled", "required", "indeterminate", "tabIndex", "blur", "click", "change"], ["input", ""]], template: function CheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("blur", function CheckboxComponent_Template_input_blur_1_listener() { return ctx.onBlur(); })("click", function CheckboxComponent_Template_input_click_1_listener($event) { return ctx.onCheckboxClick($event); })("change", function CheckboxComponent_Template_input_change_1_listener($event) { return ctx.onCheckboxChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "label", 0);
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(12, _c1, ctx.default, !ctx.default, ctx.inline, ctx.inline && !ctx.default));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(17, _c2, ctx.filledIn || ctx.rounded, ctx.default, !ctx.default))("id", ctx.id)("checked", ctx.checked)("disabled", ctx.disabled)("required", ctx.required)("indeterminate", ctx.indeterminate)("tabIndex", ctx.tabIndex);
        ɵngcc0.ɵɵattribute("name", ctx.name)("value", ctx.value);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction5(21, _c3, ctx.default, !ctx.default, ctx.checkboxPosition === "right", ctx.rounded, ctx.disabled));
        ɵngcc0.ɵɵattribute("for", ctx.id);
    } }, directives: [ɵngcc1.NgClass], styles: [".form-check-label.label-before:after,.form-check-label.label-before:before{top:0!important;right:0!important;left:auto!important}.custom-control-label.label-before:after,.custom-control-label.label-before:before{top:.25rem!important;right:0!important;left:auto!important}.custom-control-label.label-before{position:absolute}.custom-control-inline .label-before{position:relative}.form-check-label.label-before{padding-left:0!important;padding-right:35px}.custom-control-label.label-before{padding-left:0!important;padding-right:25px!important}.form-check-input[type=checkbox]:checked+.label-before:before,label.btn input[type=checkbox]:checked+.label-before:before{top:-4px!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox]:indeterminate+.label-before:before,label.btn input[type=checkbox]:indeterminate+.label-before:before{top:-11px!important;right:16px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:before,.form-check-input[type=checkbox].filled-in:checked+.label-before:before,label.btn input[type=checkbox].filled-in+.label-before:before,label.btn input[type=checkbox].filled-in:checked+.label-before:before{top:0!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:after,label.btn input[type=checkbox].filled-in+.label-before:after{top:0!important;left:auto!important}.checkbox-rounded:after{border-radius:50%!important}mdb-checkbox .form-check{padding-left:0!important}"], encapsulation: 2, changeDetection: 0 });
CheckboxComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
__decorate([
    ViewChild('input', { static: true }),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "inputEl", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CheckboxComponent.prototype, "class", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CheckboxComponent.prototype, "id", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CheckboxComponent.prototype, "required", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CheckboxComponent.prototype, "name", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CheckboxComponent.prototype, "value", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "checked", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "filledIn", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "indeterminate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CheckboxComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "rounded", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "checkboxPosition", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "default", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], CheckboxComponent.prototype, "inline", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], CheckboxComponent.prototype, "tabIndex", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CheckboxComponent.prototype, "change", void 0);
__decorate([
    HostListener('click', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], CheckboxComponent.prototype, "onLabelClick", null);
__decorate([
    HostListener('document:click'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CheckboxComponent.prototype, "onDocumentClick", null);
CheckboxComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef])
], CheckboxComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-checkbox',
                template: "<div\n  [ngClass]=\"{\n  'custom-control custom-checkbox': default,\n  'form-check': !default,\n  'custom-control-inline': inline,\n  'form-check-inline': inline && !default }\">\n  <input\n    #input\n    type=\"checkbox\"\n    class=\"custom-control-input\"\n    [ngClass]=\"{\n      'filled-in': filledIn || rounded,\n      'custom-control-input': default,\n      'form-check-input': !default }\"\n    [id]=\"id\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [indeterminate]=\"indeterminate\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [tabIndex]=\"tabIndex\"\n    (blur)=\"onBlur()\"\n    (click)=\"onCheckboxClick($event)\"\n    (change)=\"onCheckboxChange($event)\">\n  <label\n    [ngClass]=\"{\n      'custom-control-label': default,\n      'form-check-label': !default,\n      'label-before': checkboxPosition === 'right',\n      'checkbox-rounded': rounded,\n      'disabled': disabled }\"\n    [attr.for]=\"id\">\n    <ng-content></ng-content>\n  </label>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [CHECKBOX_VALUE_ACCESSOR],
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".form-check-label.label-before:after,.form-check-label.label-before:before{top:0!important;right:0!important;left:auto!important}.custom-control-label.label-before:after,.custom-control-label.label-before:before{top:.25rem!important;right:0!important;left:auto!important}.custom-control-label.label-before{position:absolute}.custom-control-inline .label-before{position:relative}.form-check-label.label-before{padding-left:0!important;padding-right:35px}.custom-control-label.label-before{padding-left:0!important;padding-right:25px!important}.form-check-input[type=checkbox]:checked+.label-before:before,label.btn input[type=checkbox]:checked+.label-before:before{top:-4px!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox]:indeterminate+.label-before:before,label.btn input[type=checkbox]:indeterminate+.label-before:before{top:-11px!important;right:16px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:before,.form-check-input[type=checkbox].filled-in:checked+.label-before:before,label.btn input[type=checkbox].filled-in+.label-before:before,label.btn input[type=checkbox].filled-in:checked+.label-before:before{top:0!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:after,label.btn input[type=checkbox].filled-in+.label-before:after{top:0!important;left:auto!important}.checkbox-rounded:after{border-radius:50%!important}mdb-checkbox .form-check{padding-left:0!important}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { id: [{
            type: Input
        }], checked: [{
            type: Input
        }], filledIn: [{
            type: Input
        }], indeterminate: [{
            type: Input
        }], rounded: [{
            type: Input
        }], checkboxPosition: [{
            type: Input
        }], default: [{
            type: Input
        }], inline: [{
            type: Input
        }], change: [{
            type: Output
        }], onLabelClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], onDocumentClick: [{
            type: HostListener,
            args: ['document:click']
        }], value: [{
            type: Input
        }], disabled: [{
            type: Input
        }], inputEl: [{
            type: ViewChild,
            args: ['input', { static: true }]
        }], class: [{
            type: Input
        }], required: [{
            type: Input
        }], name: [{
            type: Input
        }], tabIndex: [{
            type: Input
        }] }); })();
export { CheckboxComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,