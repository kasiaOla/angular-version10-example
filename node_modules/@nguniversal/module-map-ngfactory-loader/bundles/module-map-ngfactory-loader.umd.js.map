{"version":3,"file":"module-map-ngfactory-loader.umd.js","sources":["../../../../../modules/module-map-ngfactory-loader/src/module-map-ngfactory-loader.ts","../../../../../modules/module-map-ngfactory-loader/src/module-map-loader.module.ts","../../../../../modules/module-map-ngfactory-loader/src/index.ts","../../../../../modules/module-map-ngfactory-loader/public_api.ts","../../../../../modules/module-map-ngfactory-loader/index.ts","../../../../../modules/module-map-ngfactory-loader/module-map-ngfactory-loader_public_index.ts"],"names":["InjectionToken","Compiler","Injectable","tslib_1.__param","Inject","NgModule","NgModuleFactoryLoader"],"mappings":";;;;;;IAkBA;AACA;AAEA;AAAA,QAAa,UAAU,GAA8B,IAAIA,mBAAc,CAAC,YAAY,CAAC,CAAC;AACtF,IACA;AACA;AAEA;AACA;AAAgE,QAC9D,kCAAoB,QAAkB,EAA8B,SAAoB;AAAI,YAAxE,aAAQ,GAAR,QAAQ,CAAU;AAAC,YAA6B,cAAS,GAAT,SAAS,CAAW;AAAC,SAAI;AAC/F,QACE,uCAAI,GAAJ,UAAK,kBAA0B;AAAI,YACjC,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,YAAYC,aAAQ,CAAC;AAC1D,YAAI,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;AACpD,YACI,IAAI,CAAC,IAAI,EAAE;AACf,gBAAM,MAAM,IAAI,KAAK,CAAI,kBAAkB,qCAAkC,CAAC,CAAC;AAC/E,aAAK;AACL,YACI,OAAO,WAAW;AACtB,gBAAM,IAAI,CAAC,WAAW,CAAwB,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAa,IAAI,CAAC,CAAC;AAC5F,SAAG;AAEH,QAAU,8CAAW,GAAnB,UAAoB,OAA6B;AAAI,YACnD,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;AACpD,SAAG;AAEH,QAAU,iDAAc,GAAtB,UAAuB,IAAe;AAAI,YACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAClD,SAAG;AACF,QAtBY,wBAAwB,oCADpCC,eAAU,EAAE,9BACD,CAC+BC,mBAAAC,WAAM,CAAC,UAAU,CAAC,CAAA;AAAE,qDAA/BH,aAAQ;AAAW,WADtC,wBAAwB,CAsBpC;;;;;;;;kCACD;AAAC,QADD,+BAAC;AACA,KAvBD;AAAK;AAAC,ICVN;AACA;AAEC;AAAO;AAEA;AAAR,aAAgB,gBAAgB,CAAC,SAAoB;AAAI,QACvD,OAAO;AACT,YAAI,OAAO,EAAE,UAAU;AACvB,YAAI,QAAQ,EAAE,SAAS;AACvB,SAAG,CAAC;AACJ,IAAA,CAAC;AACD,IACA;AACA;AAEA;AAQA;AAEkB,QAFlB;AAAmC,SAiBlC;AACD,kCAlBa,qBAAqB;AAAE;AAE/B;AAEC;AAAW;AAEA;AAAY,QAApB,6BAAO,GAAd,UAAe,SAAoB;AAAI,YACrC,OAAO;AACX,gBAAM,QAAQ,EAAE,uBAAqB;AACrC,gBAAM,SAAS,EAAE;AACjB,oBAAQ;AACR,wBAAU,OAAO,EAAE,UAAU;AAC7B,wBAAU,QAAQ,EAAE,SAAS;AAC7B,qBAAS;AACT,iBAAO;AACP,aAAK,CAAC;AACN,SAAG;AACF;QAjBY,qBAAqB;IARjCI,aAAQ,CAAC,kBACR,SAAS,EAAE,sBACT,0BACE,OAAO,EAAEC,0BAAqB,0BAC9B,QAAQ,EAAE;;aAAwB,sBACnC;IACF,cACF,CAAC,YACW;KAAqB,CAiBjC;;;;;;;;;;;;gDACD;AAAC,QADD,4BAAC;AACA,KAlBD;AAAK;AAAC,ICxCN;AACA;AACI;AAEC;AAAO;AACI;AAEA,OADb;AACH;AAAC,ICPD;AACA;AACI;AAEC;AAAO;AACI;AAEA,OADb;AACH;AAAC,ICPD;AACA;AACI;AAEC;AAAO;AACI;AAEA,OADb;AACH;AAAC,ICPD;AACA;AAEA,OADG;AACH;AACA;AAEuB;AAA2D;AAAqC;AAAiE;AAAC;AAAmE;AAAC;AAAK","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Injectable,\n  NgModuleFactoryLoader,\n  InjectionToken,\n  NgModuleFactory,\n  Inject,\n  Type,\n  Compiler\n} from '@angular/core';\nimport {ModuleMap} from './module-map';\n\n/**\n * Token used by the ModuleMapNgFactoryLoader to load modules\n */\nexport const MODULE_MAP: InjectionToken<ModuleMap> = new InjectionToken('MODULE_MAP');\n\n/**\n * NgModuleFactoryLoader which does not lazy load\n */\n@Injectable()\nexport class ModuleMapNgFactoryLoader implements NgModuleFactoryLoader {\n  constructor(private compiler: Compiler, @Inject(MODULE_MAP) private moduleMap: ModuleMap) { }\n\n  load(loadChildrenString: string): Promise<NgModuleFactory<any>> {\n    const offlineMode = this.compiler instanceof Compiler;\n    const type = this.moduleMap[loadChildrenString];\n\n    if (!type) {\n      throw new Error(`${loadChildrenString} did not exist in the MODULE_MAP`);\n    }\n\n    return offlineMode ?\n      this.loadFactory(<NgModuleFactory<any>> type) : this.loadAndCompile(<Type<any>> type);\n  }\n\n  private loadFactory(factory: NgModuleFactory<any>): Promise<NgModuleFactory<any>> {\n    return new Promise(resolve => resolve(factory));\n  }\n\n  private loadAndCompile(type: Type<any>): Promise<NgModuleFactory<any>> {\n    return this.compiler.compileModuleAsync(type);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  NgModule,\n  NgModuleFactoryLoader,\n  ModuleWithProviders,\n  StaticProvider\n} from '@angular/core';\n\nimport { ModuleMapNgFactoryLoader, MODULE_MAP } from './module-map-ngfactory-loader';\nimport {ModuleMap} from './module-map';\n\n/**\n * Helper function for getting the providers object for the MODULE_MAP\n *\n * @param moduleMap Map to use as a value for MODULE_MAP\n */\nexport function provideModuleMap(moduleMap: ModuleMap): StaticProvider {\n  return {\n    provide: MODULE_MAP,\n    useValue: moduleMap\n  };\n}\n\n/**\n * Module for using a NgModuleFactoryLoader which does not lazy load\n */\n@NgModule({\n  providers: [\n    {\n      provide: NgModuleFactoryLoader,\n      useClass: ModuleMapNgFactoryLoader\n    }\n  ]\n})\nexport class ModuleMapLoaderModule {\n  /**\n   * Returns a ModuleMapLoaderModule along with a MODULE_MAP\n   *\n   * @param moduleMap Map to use as a value for MODULE_MAP\n   */\n  static withMap(moduleMap: ModuleMap): ModuleWithProviders {\n    return {\n      ngModule: ModuleMapLoaderModule,\n      providers: [\n        {\n          provide: MODULE_MAP,\n          useValue: moduleMap\n        }\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './module-map-loader.module';\nexport * from './module-map-ngfactory-loader';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ModuleMap as Éµnguniversal_modules_module_map_ngfactory_loader_module_map_ngfactory_loader_a} from './src/module-map';"]}