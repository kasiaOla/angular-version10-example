{"version":3,"file":"express-engine.umd.js","sources":["../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/src/index.ts","../../../../../../modules/common/engine/private_api.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../modules/express-engine/src/main.ts","../../../../../modules/express-engine/public_api.ts","../../../../../modules/express-engine/index.ts","../../../../../modules/express-engine/express-engine.ts"],"names":["fs.readFile","platformDynamicServer","CompilerFactory","ResourceLoader","INITIAL_CONFIG","renderModuleFactory","NgModuleFactory","fs.readFileSync","__assign","REQUEST","RESPONSE"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport * as fs from 'fs';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException | null, data: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport { FileLoader } from './file-loader';\nimport { RenderOptions } from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './interfaces';\nexport * from './file-loader';\nexport * from './engine';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine,\n  RenderOptions as ɵRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Request, Response } from 'express';\nimport * as fs from 'fs';\n\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { ɵCommonEngine as CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: Response;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: Readonly<NgSetupOptions>) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n\n  return function (filePath: string,\n                   options: object,\n                   callback: (err?: Error | null, html?: string) => void) {\n    try {\n      const renderOptions = { ...options } as RenderOptions;\n      if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      const req = renderOptions.req;\n      const res = renderOptions.res || req.res;\n\n      renderOptions.url =\n      renderOptions.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`;\n      renderOptions.document = renderOptions.document || getDocument(filePath);\n\n      renderOptions.providers = renderOptions.providers || [];\n      renderOptions.providers = renderOptions.providers.concat(getReqResProviders(req, res));\n\n      engine.render(renderOptions)\n        .then(html => callback(null, html))\n        .catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ngExpressEngine, NgSetupOptions, RenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}